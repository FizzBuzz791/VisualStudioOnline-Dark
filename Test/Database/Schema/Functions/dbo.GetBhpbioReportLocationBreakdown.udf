IF Object_Id('dbo.GetBhpbioReportLocationBreakdown') IS NOT NULL 
     DROP FUNCTION dbo.GetBhpbioReportLocationBreakdown
GO

CREATE FUNCTION dbo.GetBhpbioReportLocationBreakdown
(
	@iLocationId INT,
	@iGetChildLocations BIT,
	@iLowestLocationTypeDescription VARCHAR(31)
)
RETURNS @Location TABLE
(
	LocationId INT NOT NULL,
	ParentLocationId INT NULL
	PRIMARY KEY CLUSTERED (LocationId)
)
BEGIN
	-- effectively returns a Location Subtree
	-- if "GetChildLocations" = 0 then the returned ParentLocationId's are NOT resolved
	-- if         ""          = 1 then the returned ParentLocationId's ARE resolved

	DECLARE @CurrentLocationTypeId TINYINT
	DECLARE @NextLocationTypeId TINYINT
	DECLARE @BreakDownLocationTypeId TINYINT
	DECLARE @LocationId INT

	DECLARE @CurrentLevel TINYINT
	DECLARE @LowestLevel TINYINT
	
	DECLARE @ParentLocation TABLE
	(
		LocationId INT NOT NULL,
		PRIMARY KEY (LocationId)
	)
	
	-- resolve the lowest location level we want to achieve
	SET @LowestLevel =
		(
			SELECT Location_Level
			FROM dbo.GetLocationTypeHierarchy(0) AS h
				INNER JOIN dbo.LocationType AS lt
					ON (h.Location_Type_Id = lt.Location_Type_Id)
			WHERE (@iLowestLocationTypeDescription IS NOT NULL AND lt.Description = @iLowestLocationTypeDescription)
				OR (@iLowestLocationTypeDescription IS NULL AND h.Bottom_In_Hierarchy = 1)
		)
	
	SET @LocationId = @iLocationId
	IF @LocationId <= 0 OR @LocationId IS NULL
	BEGIN
		SELECT @LocationId = Location_Id
		FROM dbo.Location
		WHERE Parent_Location_Id IS NULL
	END
	
	IF @iGetChildLocations = 1
	BEGIN
		SELECT @BreakDownLocationTypeId = LT.Location_Type_Id
		FROM dbo.Location AS L
			INNER JOIN dbo.LocationType AS LT
				ON (L.Location_Type_Id = LT.Parent_Location_Type_Id)
		WHERE L.Location_Id = @LocationId
		
		INSERT INTO @ParentLocation
			(LocationId)
		SELECT Location_Id
		FROM dbo.Location AS L
		WHERE L.Parent_Location_Id = @LocationId
	END
	
	-- determine the location id to seed the process
	SELECT @CurrentLocationTypeId = lt.Location_Type_Id
	FROM dbo.LocationType AS lt
		INNER JOIN Location AS l
			ON lt.Parent_Location_Type_Id = l.Location_Type_Id
	WHERE l.Location_Id = @LocationId

	-- determine the current location level
	SET @CurrentLevel =
		(
			SELECT Location_Level
			FROM dbo.GetLocationTypeHierarchy(0)
			WHERE Location_Type_Id = @CurrentLocationTypeId
		)

	-- add the seed record
	INSERT INTO @Location
		(LocationId, ParentLocationId)
	SELECT L.Location_Id, dbo.GetLocationTypeLocationId(L.Location_Id, @BreakDownLocationTypeId)
	FROM dbo.Location AS L
	WHERE L.Location_Id = @LocationId

	-- at each level, add all child records
	WHILE (@CurrentLocationTypeId IS NOT NULL) AND (@CurrentLevel <= @LowestLevel)
	BEGIN
		-- add all records FROM the current level
		INSERT INTO @Location
			(LocationId, ParentLocationId)
		SELECT l.Location_Id,
			CASE	WHEN PL.LocationId IS NOT NULL THEN PL.LocationId
					WHEN CL.ParentLocationId IS NOT NULL THEN CL.ParentLocationId
					ELSE NULL
			END
		FROM dbo.Location AS l 
			INNER JOIN @Location AS CL
				ON (l.Parent_Location_Id = CL.LocationId)
			LEFT JOIN @ParentLocation AS pl
				ON (pl.LocationId = l.Location_Id)
		WHERE l.Location_Type_Id = @CurrentLocationTypeId

		-- Advance to the next lowest location type id
		SET @NextLocationTypeId = NULL
		
		SELECT @NextLocationTypeId = LT.Location_Type_Id
		FROM dbo.LocationType AS PLT
			INNER JOIN dbo.LocationType AS LT
				ON (PLT.Location_Type_Id = LT.Parent_Location_Type_Id)
		WHERE PLT.Location_Type_Id = @CurrentLocationTypeId

		SET @CurrentLocationTypeId = @NextLocationTypeId
		SET @CurrentLevel = @CurrentLevel + 1
	END

	IF @iGetChildLocations = 1
	BEGIN
		DELETE
		FROM @Location
		WHERE ParentLocationId IS NULL
	END
	
	RETURN
END
GO

/*
SELECT * FROM dbo.GetBhpbioReportLocationBreakdown(12, 0, NULL)

SELECT * FROM dbo.GetBhpbioReportLocationBreakdown(24749, 0, 'SITE')
SELECT * FROM dbo.GetBhpbioReportLocationBreakdown(12, 0, 'SITE')
SELECT * FROM dbo.GetBhpbioReportLocationBreakdown(8, 0, 'SITE')
SELECT * FROM dbo.GetBhpbioReportLocationBreakdown(1, 0, 'SITE')
SELECT * FROM dbo.GetBhpbioReportLocationBreakdown(NULL, 0, 'SITE')

SELECT * FROM dbo.GetBhpbioReportLocationBreakdown(24749, 1, 'SITE')
SELECT * FROM dbo.GetBhpbioReportLocationBreakdown(12, 1, 'SITE')
SELECT * FROM dbo.GetBhpbioReportLocationBreakdown(8, 1, 'SITE')
SELECT * FROM dbo.GetBhpbioReportLocationBreakdown(1, 1, 'SITE')
SELECT * FROM dbo.GetBhpbioReportLocationBreakdown(NULL, 1, 'SITE')
*/
