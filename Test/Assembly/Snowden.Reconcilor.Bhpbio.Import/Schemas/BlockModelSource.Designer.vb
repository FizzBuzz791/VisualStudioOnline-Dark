'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("BlockModelSource"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class BlockModelSource
    Inherits Global.System.Data.DataSet
    
    Private tableBlastModelBlockWithPointAndGrade As BlastModelBlockWithPointAndGradeDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("BlastModelBlockWithPointAndGrade")) Is Nothing) Then
                MyBase.Tables.Add(New BlastModelBlockWithPointAndGradeDataTable(ds.Tables("BlastModelBlockWithPointAndGrade")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BlastModelBlockWithPointAndGrade() As BlastModelBlockWithPointAndGradeDataTable
        Get
            Return Me.tableBlastModelBlockWithPointAndGrade
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As BlockModelSource = CType(MyBase.Clone,BlockModelSource)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("BlastModelBlockWithPointAndGrade")) Is Nothing) Then
                MyBase.Tables.Add(New BlastModelBlockWithPointAndGradeDataTable(ds.Tables("BlastModelBlockWithPointAndGrade")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableBlastModelBlockWithPointAndGrade = CType(MyBase.Tables("BlastModelBlockWithPointAndGrade"),BlastModelBlockWithPointAndGradeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBlastModelBlockWithPointAndGrade) Is Nothing) Then
                Me.tableBlastModelBlockWithPointAndGrade.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "BlockModelSource"
        Me.Prefix = ""
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableBlastModelBlockWithPointAndGrade = New BlastModelBlockWithPointAndGradeDataTable()
        MyBase.Tables.Add(Me.tableBlastModelBlockWithPointAndGrade)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBlastModelBlockWithPointAndGrade() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As BlockModelSource = New BlockModelSource()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BlastModelBlockWithPointAndGradeRowChangeEventHandler(ByVal sender As Object, ByVal e As BlastModelBlockWithPointAndGradeRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BlastModelBlockWithPointAndGradeDataTable
        Inherits Global.System.Data.TypedTableBase(Of BlastModelBlockWithPointAndGradeRow)
        
        Private columnSite As Global.System.Data.DataColumn
        
        Private columnOrebody As Global.System.Data.DataColumn
        
        Private columnPit As Global.System.Data.DataColumn
        
        Private columnBench As Global.System.Data.DataColumn
        
        Private columnPatternNumber As Global.System.Data.DataColumn
        
        Private columnBlockName As Global.System.Data.DataColumn
        
        Private columnModelName As Global.System.Data.DataColumn
        
        Private columnModelOreType As Global.System.Data.DataColumn
        
        Private columnBlockExternalSystemId As Global.System.Data.DataColumn
        
        Private columnModelFilename As Global.System.Data.DataColumn
        
        Private columnBlockNumber As Global.System.Data.DataColumn
        
        Private columnGeoType As Global.System.Data.DataColumn
        
        Private columnBlockedDate As Global.System.Data.DataColumn
        
        Private columnBlastedDate As Global.System.Data.DataColumn
        
        Private columnCentroidEasting As Global.System.Data.DataColumn
        
        Private columnCentroidNorthing As Global.System.Data.DataColumn
        
        Private columnCentroidRL As Global.System.Data.DataColumn
        
        Private columnModelTonnes As Global.System.Data.DataColumn
        
        Private columnLastModifiedUser As Global.System.Data.DataColumn
        
        Private columnLastModifiedDate As Global.System.Data.DataColumn
        
        Private columnPoint As Global.System.Data.DataColumn
        
        Private columnGrade As Global.System.Data.DataColumn
        
        Private columnModelLumpPercentAsShipped As Global.System.Data.DataColumn
        
        Private columnModelLumpPercentAsDropped As Global.System.Data.DataColumn
        
        Private columnModelVolume As Global.System.Data.DataColumn
        
        Private columnResourceClassification As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BlastModelBlockWithPointAndGrade"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrebodyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrebody
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BenchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBench
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatternNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatternNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlockNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlockName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModelNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModelOreTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelOreType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlockExternalSystemIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlockExternalSystemId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModelFilenameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelFilename
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlockNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlockNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GeoTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeoType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlockedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlockedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlastedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlastedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CentroidEastingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCentroidEasting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CentroidNorthingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCentroidNorthing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CentroidRLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCentroidRL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModelTonnesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelTonnes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LastModifiedUserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastModifiedUser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LastModifiedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastModifiedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PointColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPoint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModelLumpPercentAsShippedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelLumpPercentAsShipped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModelLumpPercentAsDroppedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelLumpPercentAsDropped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModelVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelVolume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResourceClassificationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResourceClassification
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BlastModelBlockWithPointAndGradeRow
            Get
                Return CType(Me.Rows(index),BlastModelBlockWithPointAndGradeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BlastModelBlockWithPointAndGradeRowChanging As BlastModelBlockWithPointAndGradeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BlastModelBlockWithPointAndGradeRowChanged As BlastModelBlockWithPointAndGradeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BlastModelBlockWithPointAndGradeRowDeleting As BlastModelBlockWithPointAndGradeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BlastModelBlockWithPointAndGradeRowDeleted As BlastModelBlockWithPointAndGradeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBlastModelBlockWithPointAndGradeRow(ByVal row As BlastModelBlockWithPointAndGradeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBlastModelBlockWithPointAndGradeRow( _
                    ByVal Site As String,  _
                    ByVal Orebody As String,  _
                    ByVal Pit As String,  _
                    ByVal Bench As String,  _
                    ByVal PatternNumber As String,  _
                    ByVal BlockName As String,  _
                    ByVal ModelName As String,  _
                    ByVal ModelOreType As String,  _
                    ByVal BlockExternalSystemId As String,  _
                    ByVal ModelFilename As String,  _
                    ByVal BlockNumber As String,  _
                    ByVal GeoType As String,  _
                    ByVal BlockedDate As Date,  _
                    ByVal BlastedDate As Date,  _
                    ByVal CentroidEasting As Double,  _
                    ByVal CentroidNorthing As Double,  _
                    ByVal CentroidRL As Double,  _
                    ByVal ModelTonnes As Double,  _
                    ByVal LastModifiedUser As String,  _
                    ByVal LastModifiedDate As Date,  _
                    ByVal Point As String,  _
                    ByVal Grade As String,  _
                    ByVal ModelLumpPercentAsShipped As Decimal,  _
                    ByVal ModelLumpPercentAsDropped As Decimal,  _
                    ByVal ModelVolume As Double,  _
                    ByVal ResourceClassification As String) As BlastModelBlockWithPointAndGradeRow
            Dim rowBlastModelBlockWithPointAndGradeRow As BlastModelBlockWithPointAndGradeRow = CType(Me.NewRow,BlastModelBlockWithPointAndGradeRow)
            Dim columnValuesArray() As Object = New Object() {Site, Orebody, Pit, Bench, PatternNumber, BlockName, ModelName, ModelOreType, BlockExternalSystemId, ModelFilename, BlockNumber, GeoType, BlockedDate, BlastedDate, CentroidEasting, CentroidNorthing, CentroidRL, ModelTonnes, LastModifiedUser, LastModifiedDate, Point, Grade, ModelLumpPercentAsShipped, ModelLumpPercentAsDropped, ModelVolume, ResourceClassification}
            rowBlastModelBlockWithPointAndGradeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBlastModelBlockWithPointAndGradeRow)
            Return rowBlastModelBlockWithPointAndGradeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySiteOrebodyPitBenchPatternNumberBlockNameModelNameModelOreType(ByVal Site As String, ByVal Orebody As String, ByVal Pit As String, ByVal Bench As String, ByVal PatternNumber As String, ByVal BlockName As String, ByVal ModelName As String, ByVal ModelOreType As String) As BlastModelBlockWithPointAndGradeRow
            Return CType(Me.Rows.Find(New Object() {Site, Orebody, Pit, Bench, PatternNumber, BlockName, ModelName, ModelOreType}),BlastModelBlockWithPointAndGradeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BlastModelBlockWithPointAndGradeDataTable = CType(MyBase.Clone,BlastModelBlockWithPointAndGradeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BlastModelBlockWithPointAndGradeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSite = MyBase.Columns("Site")
            Me.columnOrebody = MyBase.Columns("Orebody")
            Me.columnPit = MyBase.Columns("Pit")
            Me.columnBench = MyBase.Columns("Bench")
            Me.columnPatternNumber = MyBase.Columns("PatternNumber")
            Me.columnBlockName = MyBase.Columns("BlockName")
            Me.columnModelName = MyBase.Columns("ModelName")
            Me.columnModelOreType = MyBase.Columns("ModelOreType")
            Me.columnBlockExternalSystemId = MyBase.Columns("BlockExternalSystemId")
            Me.columnModelFilename = MyBase.Columns("ModelFilename")
            Me.columnBlockNumber = MyBase.Columns("BlockNumber")
            Me.columnGeoType = MyBase.Columns("GeoType")
            Me.columnBlockedDate = MyBase.Columns("BlockedDate")
            Me.columnBlastedDate = MyBase.Columns("BlastedDate")
            Me.columnCentroidEasting = MyBase.Columns("CentroidEasting")
            Me.columnCentroidNorthing = MyBase.Columns("CentroidNorthing")
            Me.columnCentroidRL = MyBase.Columns("CentroidRL")
            Me.columnModelTonnes = MyBase.Columns("ModelTonnes")
            Me.columnLastModifiedUser = MyBase.Columns("LastModifiedUser")
            Me.columnLastModifiedDate = MyBase.Columns("LastModifiedDate")
            Me.columnPoint = MyBase.Columns("Point")
            Me.columnGrade = MyBase.Columns("Grade")
            Me.columnModelLumpPercentAsShipped = MyBase.Columns("ModelLumpPercentAsShipped")
            Me.columnModelLumpPercentAsDropped = MyBase.Columns("ModelLumpPercentAsDropped")
            Me.columnModelVolume = MyBase.Columns("ModelVolume")
            Me.columnResourceClassification = MyBase.Columns("ResourceClassification")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSite = New Global.System.Data.DataColumn("Site", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSite)
            Me.columnOrebody = New Global.System.Data.DataColumn("Orebody", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrebody)
            Me.columnPit = New Global.System.Data.DataColumn("Pit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPit)
            Me.columnBench = New Global.System.Data.DataColumn("Bench", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBench)
            Me.columnPatternNumber = New Global.System.Data.DataColumn("PatternNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatternNumber)
            Me.columnBlockName = New Global.System.Data.DataColumn("BlockName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlockName)
            Me.columnModelName = New Global.System.Data.DataColumn("ModelName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelName)
            Me.columnModelOreType = New Global.System.Data.DataColumn("ModelOreType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelOreType)
            Me.columnBlockExternalSystemId = New Global.System.Data.DataColumn("BlockExternalSystemId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlockExternalSystemId)
            Me.columnModelFilename = New Global.System.Data.DataColumn("ModelFilename", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelFilename)
            Me.columnBlockNumber = New Global.System.Data.DataColumn("BlockNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlockNumber)
            Me.columnGeoType = New Global.System.Data.DataColumn("GeoType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeoType)
            Me.columnBlockedDate = New Global.System.Data.DataColumn("BlockedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlockedDate)
            Me.columnBlastedDate = New Global.System.Data.DataColumn("BlastedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlastedDate)
            Me.columnCentroidEasting = New Global.System.Data.DataColumn("CentroidEasting", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCentroidEasting)
            Me.columnCentroidNorthing = New Global.System.Data.DataColumn("CentroidNorthing", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCentroidNorthing)
            Me.columnCentroidRL = New Global.System.Data.DataColumn("CentroidRL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCentroidRL)
            Me.columnModelTonnes = New Global.System.Data.DataColumn("ModelTonnes", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelTonnes)
            Me.columnLastModifiedUser = New Global.System.Data.DataColumn("LastModifiedUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastModifiedUser)
            Me.columnLastModifiedDate = New Global.System.Data.DataColumn("LastModifiedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastModifiedDate)
            Me.columnPoint = New Global.System.Data.DataColumn("Point", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPoint)
            Me.columnGrade = New Global.System.Data.DataColumn("Grade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrade)
            Me.columnModelLumpPercentAsShipped = New Global.System.Data.DataColumn("ModelLumpPercentAsShipped", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelLumpPercentAsShipped)
            Me.columnModelLumpPercentAsDropped = New Global.System.Data.DataColumn("ModelLumpPercentAsDropped", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelLumpPercentAsDropped)
            Me.columnModelVolume = New Global.System.Data.DataColumn("ModelVolume", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelVolume)
            Me.columnResourceClassification = New Global.System.Data.DataColumn("ResourceClassification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResourceClassification)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSite, Me.columnOrebody, Me.columnPit, Me.columnBench, Me.columnPatternNumber, Me.columnBlockName, Me.columnModelName, Me.columnModelOreType}, true))
            Me.columnSite.AllowDBNull = false
            Me.columnSite.MaxLength = 9
            Me.columnOrebody.AllowDBNull = false
            Me.columnOrebody.MaxLength = 2
            Me.columnPit.AllowDBNull = false
            Me.columnPit.MaxLength = 10
            Me.columnBench.AllowDBNull = false
            Me.columnBench.MaxLength = 4
            Me.columnPatternNumber.AllowDBNull = false
            Me.columnPatternNumber.MaxLength = 4
            Me.columnBlockName.AllowDBNull = false
            Me.columnBlockName.MaxLength = 14
            Me.columnModelName.AllowDBNull = false
            Me.columnModelName.MaxLength = 31
            Me.columnModelOreType.AllowDBNull = false
            Me.columnModelOreType.MaxLength = 15
            Me.columnModelFilename.MaxLength = 200
            Me.columnBlockNumber.MaxLength = 4
            Me.columnGeoType.MaxLength = 9
            Me.columnBlockedDate.AllowDBNull = false
            Me.columnBlockedDate.DateTimeMode = Global.System.Data.DataSetDateTime.Unspecified
            Me.columnBlastedDate.DateTimeMode = Global.System.Data.DataSetDateTime.Unspecified
            Me.columnLastModifiedUser.MaxLength = 50
            Me.columnLastModifiedDate.DateTimeMode = Global.System.Data.DataSetDateTime.Unspecified
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBlastModelBlockWithPointAndGradeRow() As BlastModelBlockWithPointAndGradeRow
            Return CType(Me.NewRow,BlastModelBlockWithPointAndGradeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BlastModelBlockWithPointAndGradeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BlastModelBlockWithPointAndGradeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BlastModelBlockWithPointAndGradeRowChangedEvent) Is Nothing) Then
                RaiseEvent BlastModelBlockWithPointAndGradeRowChanged(Me, New BlastModelBlockWithPointAndGradeRowChangeEvent(CType(e.Row,BlastModelBlockWithPointAndGradeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BlastModelBlockWithPointAndGradeRowChangingEvent) Is Nothing) Then
                RaiseEvent BlastModelBlockWithPointAndGradeRowChanging(Me, New BlastModelBlockWithPointAndGradeRowChangeEvent(CType(e.Row,BlastModelBlockWithPointAndGradeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BlastModelBlockWithPointAndGradeRowDeletedEvent) Is Nothing) Then
                RaiseEvent BlastModelBlockWithPointAndGradeRowDeleted(Me, New BlastModelBlockWithPointAndGradeRowChangeEvent(CType(e.Row,BlastModelBlockWithPointAndGradeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BlastModelBlockWithPointAndGradeRowDeletingEvent) Is Nothing) Then
                RaiseEvent BlastModelBlockWithPointAndGradeRowDeleting(Me, New BlastModelBlockWithPointAndGradeRowChangeEvent(CType(e.Row,BlastModelBlockWithPointAndGradeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBlastModelBlockWithPointAndGradeRow(ByVal row As BlastModelBlockWithPointAndGradeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BlockModelSource = New BlockModelSource()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BlastModelBlockWithPointAndGradeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BlastModelBlockWithPointAndGradeRow
        Inherits Global.System.Data.DataRow
        
        Private tableBlastModelBlockWithPointAndGrade As BlastModelBlockWithPointAndGradeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBlastModelBlockWithPointAndGrade = CType(Me.Table,BlastModelBlockWithPointAndGradeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Site() As String
            Get
                Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.SiteColumn),String)
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.SiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Orebody() As String
            Get
                Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.OrebodyColumn),String)
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.OrebodyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pit() As String
            Get
                Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.PitColumn),String)
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.PitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bench() As String
            Get
                Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.BenchColumn),String)
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.BenchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatternNumber() As String
            Get
                Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.PatternNumberColumn),String)
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.PatternNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlockName() As String
            Get
                Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.BlockNameColumn),String)
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.BlockNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModelName() As String
            Get
                Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.ModelNameColumn),String)
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.ModelNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModelOreType() As String
            Get
                Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.ModelOreTypeColumn),String)
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.ModelOreTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlockExternalSystemId() As String
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.BlockExternalSystemIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlockExternalSystemId' in table 'BlastModelBlockWithPointAn"& _ 
                            "dGrade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.BlockExternalSystemIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModelFilename() As String
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.ModelFilenameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModelFilename' in table 'BlastModelBlockWithPointAndGrade' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.ModelFilenameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlockNumber() As String
            Get
                If Me.IsBlockNumberNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.BlockNumberColumn),String)
                End If
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.BlockNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GeoType() As String
            Get
                If Me.IsGeoTypeNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.GeoTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.GeoTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlockedDate() As Date
            Get
                Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.BlockedDateColumn),Date)
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.BlockedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlastedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.BlastedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlastedDate' in table 'BlastModelBlockWithPointAndGrade' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.BlastedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CentroidEasting() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.CentroidEastingColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CentroidEasting' in table 'BlastModelBlockWithPointAndGrade"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.CentroidEastingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CentroidNorthing() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.CentroidNorthingColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CentroidNorthing' in table 'BlastModelBlockWithPointAndGrad"& _ 
                            "e' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.CentroidNorthingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CentroidRL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.CentroidRLColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CentroidRL' in table 'BlastModelBlockWithPointAndGrade' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.CentroidRLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModelTonnes() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.ModelTonnesColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModelTonnes' in table 'BlastModelBlockWithPointAndGrade' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.ModelTonnesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LastModifiedUser() As String
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.LastModifiedUserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastModifiedUser' in table 'BlastModelBlockWithPointAndGrad"& _ 
                            "e' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.LastModifiedUserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LastModifiedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.LastModifiedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastModifiedDate' in table 'BlastModelBlockWithPointAndGrad"& _ 
                            "e' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.LastModifiedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Point() As String
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.PointColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Point' in table 'BlastModelBlockWithPointAndGrade' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.PointColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Grade() As String
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.GradeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grade' in table 'BlastModelBlockWithPointAndGrade' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.GradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModelLumpPercentAsShipped() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.ModelLumpPercentAsShippedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModelLumpPercentAsShipped' in table 'BlastModelBlockWithPoi"& _ 
                            "ntAndGrade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.ModelLumpPercentAsShippedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModelLumpPercentAsDropped() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.ModelLumpPercentAsDroppedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModelLumpPercentAsDropped' in table 'BlastModelBlockWithPoi"& _ 
                            "ntAndGrade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.ModelLumpPercentAsDroppedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModelVolume() As Double
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.ModelVolumeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModelVolume' in table 'BlastModelBlockWithPointAndGrade' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.ModelVolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ResourceClassification() As String
            Get
                Try 
                    Return CType(Me(Me.tableBlastModelBlockWithPointAndGrade.ResourceClassificationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResourceClassification' in table 'BlastModelBlockWithPointA"& _ 
                            "ndGrade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBlastModelBlockWithPointAndGrade.ResourceClassificationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlockExternalSystemIdNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.BlockExternalSystemIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlockExternalSystemIdNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.BlockExternalSystemIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModelFilenameNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.ModelFilenameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModelFilenameNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.ModelFilenameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlockNumberNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.BlockNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlockNumberNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.BlockNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGeoTypeNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.GeoTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGeoTypeNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.GeoTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlastedDateNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.BlastedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlastedDateNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.BlastedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCentroidEastingNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.CentroidEastingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCentroidEastingNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.CentroidEastingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCentroidNorthingNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.CentroidNorthingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCentroidNorthingNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.CentroidNorthingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCentroidRLNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.CentroidRLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCentroidRLNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.CentroidRLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModelTonnesNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.ModelTonnesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModelTonnesNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.ModelTonnesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLastModifiedUserNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.LastModifiedUserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLastModifiedUserNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.LastModifiedUserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLastModifiedDateNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.LastModifiedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLastModifiedDateNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.LastModifiedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPointNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.PointColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPointNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.PointColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGradeNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.GradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGradeNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.GradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModelLumpPercentAsShippedNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.ModelLumpPercentAsShippedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModelLumpPercentAsShippedNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.ModelLumpPercentAsShippedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModelLumpPercentAsDroppedNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.ModelLumpPercentAsDroppedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModelLumpPercentAsDroppedNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.ModelLumpPercentAsDroppedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModelVolumeNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.ModelVolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModelVolumeNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.ModelVolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResourceClassificationNull() As Boolean
            Return Me.IsNull(Me.tableBlastModelBlockWithPointAndGrade.ResourceClassificationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResourceClassificationNull()
            Me(Me.tableBlastModelBlockWithPointAndGrade.ResourceClassificationColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BlastModelBlockWithPointAndGradeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BlastModelBlockWithPointAndGradeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BlastModelBlockWithPointAndGradeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BlastModelBlockWithPointAndGradeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
