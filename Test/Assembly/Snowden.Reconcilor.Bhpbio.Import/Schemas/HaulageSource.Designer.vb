'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18408
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("HaulageSource"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class HaulageSource
    Inherits Global.System.Data.DataSet
    
    Private tableHaulage As HaulageDataTable
    
    Private tableHaulageNotes As HaulageNotesDataTable
    
    Private tableHaulageValue As HaulageValueDataTable
    
    Private tableHaulageGrade As HaulageGradeDataTable
    
    Private relationFK_Haulage_HaulageNotes As Global.System.Data.DataRelation
    
    Private relationFK_Haulage_HaulageValue As Global.System.Data.DataRelation
    
    Private relationFK_Haulage_HaulageGrade As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Haulage")) Is Nothing) Then
                MyBase.Tables.Add(New HaulageDataTable(ds.Tables("Haulage")))
            End If
            If (Not (ds.Tables("HaulageNotes")) Is Nothing) Then
                MyBase.Tables.Add(New HaulageNotesDataTable(ds.Tables("HaulageNotes")))
            End If
            If (Not (ds.Tables("HaulageValue")) Is Nothing) Then
                MyBase.Tables.Add(New HaulageValueDataTable(ds.Tables("HaulageValue")))
            End If
            If (Not (ds.Tables("HaulageGrade")) Is Nothing) Then
                MyBase.Tables.Add(New HaulageGradeDataTable(ds.Tables("HaulageGrade")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Haulage() As HaulageDataTable
        Get
            Return Me.tableHaulage
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HaulageNotes() As HaulageNotesDataTable
        Get
            Return Me.tableHaulageNotes
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HaulageValue() As HaulageValueDataTable
        Get
            Return Me.tableHaulageValue
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HaulageGrade() As HaulageGradeDataTable
        Get
            Return Me.tableHaulageGrade
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As HaulageSource = CType(MyBase.Clone,HaulageSource)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Haulage")) Is Nothing) Then
                MyBase.Tables.Add(New HaulageDataTable(ds.Tables("Haulage")))
            End If
            If (Not (ds.Tables("HaulageNotes")) Is Nothing) Then
                MyBase.Tables.Add(New HaulageNotesDataTable(ds.Tables("HaulageNotes")))
            End If
            If (Not (ds.Tables("HaulageValue")) Is Nothing) Then
                MyBase.Tables.Add(New HaulageValueDataTable(ds.Tables("HaulageValue")))
            End If
            If (Not (ds.Tables("HaulageGrade")) Is Nothing) Then
                MyBase.Tables.Add(New HaulageGradeDataTable(ds.Tables("HaulageGrade")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableHaulage = CType(MyBase.Tables("Haulage"),HaulageDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHaulage) Is Nothing) Then
                Me.tableHaulage.InitVars
            End If
        End If
        Me.tableHaulageNotes = CType(MyBase.Tables("HaulageNotes"),HaulageNotesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHaulageNotes) Is Nothing) Then
                Me.tableHaulageNotes.InitVars
            End If
        End If
        Me.tableHaulageValue = CType(MyBase.Tables("HaulageValue"),HaulageValueDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHaulageValue) Is Nothing) Then
                Me.tableHaulageValue.InitVars
            End If
        End If
        Me.tableHaulageGrade = CType(MyBase.Tables("HaulageGrade"),HaulageGradeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHaulageGrade) Is Nothing) Then
                Me.tableHaulageGrade.InitVars
            End If
        End If
        Me.relationFK_Haulage_HaulageNotes = Me.Relations("FK_Haulage_HaulageNotes")
        Me.relationFK_Haulage_HaulageValue = Me.Relations("FK_Haulage_HaulageValue")
        Me.relationFK_Haulage_HaulageGrade = Me.Relations("FK_Haulage_HaulageGrade")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "HaulageSource"
        Me.Prefix = ""
        Me.Locale = New Global.System.Globalization.CultureInfo("")
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableHaulage = New HaulageDataTable()
        MyBase.Tables.Add(Me.tableHaulage)
        Me.tableHaulageNotes = New HaulageNotesDataTable()
        MyBase.Tables.Add(Me.tableHaulageNotes)
        Me.tableHaulageValue = New HaulageValueDataTable()
        MyBase.Tables.Add(Me.tableHaulageValue)
        Me.tableHaulageGrade = New HaulageGradeDataTable()
        MyBase.Tables.Add(Me.tableHaulageGrade)
        Dim fkc As Global.System.Data.ForeignKeyConstraint
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_Haulage_HaulageNotes", New Global.System.Data.DataColumn() {Me.tableHaulage.HaulageDateColumn, Me.tableHaulage.HaulageShiftColumn, Me.tableHaulage.SourceColumn, Me.tableHaulage.SourceMineSiteColumn, Me.tableHaulage.DestinationColumn, Me.tableHaulage.DestinationMineSiteColumn, Me.tableHaulage.TruckColumn, Me.tableHaulage.TypeColumn}, New Global.System.Data.DataColumn() {Me.tableHaulageNotes.HaulageDateColumn, Me.tableHaulageNotes.HaulageShiftColumn, Me.tableHaulageNotes.SourceColumn, Me.tableHaulageNotes.SourceMineSiteColumn, Me.tableHaulageNotes.DestinationColumn, Me.tableHaulageNotes.DestinationMineSiteColumn, Me.tableHaulageNotes.TruckColumn, Me.tableHaulageNotes.TypeColumn})
        Me.tableHaulageNotes.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_Haulage_HaulageValue", New Global.System.Data.DataColumn() {Me.tableHaulage.HaulageDateColumn, Me.tableHaulage.HaulageShiftColumn, Me.tableHaulage.SourceColumn, Me.tableHaulage.SourceMineSiteColumn, Me.tableHaulage.DestinationColumn, Me.tableHaulage.DestinationMineSiteColumn, Me.tableHaulage.TruckColumn, Me.tableHaulage.TypeColumn}, New Global.System.Data.DataColumn() {Me.tableHaulageValue.HaulageDateColumn, Me.tableHaulageValue.HaulageShiftColumn, Me.tableHaulageValue.SourceColumn, Me.tableHaulageValue.SourceMineSiteColumn, Me.tableHaulageValue.DestinationColumn, Me.tableHaulageValue.DestinationMineSiteColumn, Me.tableHaulageValue.TruckColumn, Me.tableHaulageValue.TypeColumn})
        Me.tableHaulageValue.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_Haulage_HaulageGrade", New Global.System.Data.DataColumn() {Me.tableHaulage.HaulageDateColumn, Me.tableHaulage.HaulageShiftColumn, Me.tableHaulage.SourceColumn, Me.tableHaulage.SourceMineSiteColumn, Me.tableHaulage.DestinationColumn, Me.tableHaulage.DestinationMineSiteColumn, Me.tableHaulage.TruckColumn, Me.tableHaulage.TypeColumn}, New Global.System.Data.DataColumn() {Me.tableHaulageGrade.HaulageDateColumn, Me.tableHaulageGrade.HaulageShiftColumn, Me.tableHaulageGrade.SourceColumn, Me.tableHaulageGrade.SourceMineSiteColumn, Me.tableHaulageGrade.DestinationColumn, Me.tableHaulageGrade.DestinationMineSiteColumn, Me.tableHaulageGrade.TruckColumn, Me.tableHaulageGrade.TypeColumn})
        Me.tableHaulageGrade.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        Me.relationFK_Haulage_HaulageNotes = New Global.System.Data.DataRelation("FK_Haulage_HaulageNotes", New Global.System.Data.DataColumn() {Me.tableHaulage.HaulageDateColumn, Me.tableHaulage.HaulageShiftColumn, Me.tableHaulage.SourceColumn, Me.tableHaulage.SourceMineSiteColumn, Me.tableHaulage.DestinationColumn, Me.tableHaulage.DestinationMineSiteColumn, Me.tableHaulage.TruckColumn, Me.tableHaulage.TypeColumn}, New Global.System.Data.DataColumn() {Me.tableHaulageNotes.HaulageDateColumn, Me.tableHaulageNotes.HaulageShiftColumn, Me.tableHaulageNotes.SourceColumn, Me.tableHaulageNotes.SourceMineSiteColumn, Me.tableHaulageNotes.DestinationColumn, Me.tableHaulageNotes.DestinationMineSiteColumn, Me.tableHaulageNotes.TruckColumn, Me.tableHaulageNotes.TypeColumn}, false)
        Me.Relations.Add(Me.relationFK_Haulage_HaulageNotes)
        Me.relationFK_Haulage_HaulageValue = New Global.System.Data.DataRelation("FK_Haulage_HaulageValue", New Global.System.Data.DataColumn() {Me.tableHaulage.HaulageDateColumn, Me.tableHaulage.HaulageShiftColumn, Me.tableHaulage.SourceColumn, Me.tableHaulage.SourceMineSiteColumn, Me.tableHaulage.DestinationColumn, Me.tableHaulage.DestinationMineSiteColumn, Me.tableHaulage.TruckColumn, Me.tableHaulage.TypeColumn}, New Global.System.Data.DataColumn() {Me.tableHaulageValue.HaulageDateColumn, Me.tableHaulageValue.HaulageShiftColumn, Me.tableHaulageValue.SourceColumn, Me.tableHaulageValue.SourceMineSiteColumn, Me.tableHaulageValue.DestinationColumn, Me.tableHaulageValue.DestinationMineSiteColumn, Me.tableHaulageValue.TruckColumn, Me.tableHaulageValue.TypeColumn}, false)
        Me.Relations.Add(Me.relationFK_Haulage_HaulageValue)
        Me.relationFK_Haulage_HaulageGrade = New Global.System.Data.DataRelation("FK_Haulage_HaulageGrade", New Global.System.Data.DataColumn() {Me.tableHaulage.HaulageDateColumn, Me.tableHaulage.HaulageShiftColumn, Me.tableHaulage.SourceColumn, Me.tableHaulage.SourceMineSiteColumn, Me.tableHaulage.DestinationColumn, Me.tableHaulage.DestinationMineSiteColumn, Me.tableHaulage.TruckColumn, Me.tableHaulage.TypeColumn}, New Global.System.Data.DataColumn() {Me.tableHaulageGrade.HaulageDateColumn, Me.tableHaulageGrade.HaulageShiftColumn, Me.tableHaulageGrade.SourceColumn, Me.tableHaulageGrade.SourceMineSiteColumn, Me.tableHaulageGrade.DestinationColumn, Me.tableHaulageGrade.DestinationMineSiteColumn, Me.tableHaulageGrade.TruckColumn, Me.tableHaulageGrade.TypeColumn}, false)
        Me.Relations.Add(Me.relationFK_Haulage_HaulageGrade)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHaulage() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHaulageNotes() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHaulageValue() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHaulageGrade() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As HaulageSource = New HaulageSource()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HaulageRowChangeEventHandler(ByVal sender As Object, ByVal e As HaulageRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HaulageNotesRowChangeEventHandler(ByVal sender As Object, ByVal e As HaulageNotesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HaulageValueRowChangeEventHandler(ByVal sender As Object, ByVal e As HaulageValueRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub HaulageGradeRowChangeEventHandler(ByVal sender As Object, ByVal e As HaulageGradeRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HaulageDataTable
        Inherits Global.System.Data.TypedTableBase(Of HaulageRow)
        
        Private columnHaulageDate As Global.System.Data.DataColumn
        
        Private columnHaulageShift As Global.System.Data.DataColumn
        
        Private columnSource As Global.System.Data.DataColumn
        
        Private columnSourceMineSite As Global.System.Data.DataColumn
        
        Private columnDestination As Global.System.Data.DataColumn
        
        Private columnDestinationMineSite As Global.System.Data.DataColumn
        
        Private columnTonnes As Global.System.Data.DataColumn
        
        Private columnLoads As Global.System.Data.DataColumn
        
        Private columnTruck As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Haulage"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HaulageDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaulageDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HaulageShiftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaulageShift
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceMineSiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSourceMineSite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DestinationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestination
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DestinationMineSiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestinationMineSite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TonnesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTonnes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LoadsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoads
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TruckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTruck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HaulageRow
            Get
                Return CType(Me.Rows(index),HaulageRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageRowChanging As HaulageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageRowChanged As HaulageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageRowDeleting As HaulageRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageRowDeleted As HaulageRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHaulageRow(ByVal row As HaulageRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHaulageRow(ByVal HaulageDate As Date, ByVal HaulageShift As String, ByVal Source As String, ByVal SourceMineSite As String, ByVal Destination As String, ByVal DestinationMineSite As String, ByVal Tonnes As Double, ByVal Loads As Integer, ByVal Truck As String, ByVal Type As String) As HaulageRow
            Dim rowHaulageRow As HaulageRow = CType(Me.NewRow,HaulageRow)
            Dim columnValuesArray() As Object = New Object() {HaulageDate, HaulageShift, Source, SourceMineSite, Destination, DestinationMineSite, Tonnes, Loads, Truck, Type}
            rowHaulageRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHaulageRow)
            Return rowHaulageRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByHaulageDateHaulageShiftSourceSourceMineSiteDestinationDestinationMineSiteTruckType(ByVal HaulageDate As Date, ByVal HaulageShift As String, ByVal Source As String, ByVal SourceMineSite As String, ByVal Destination As String, ByVal DestinationMineSite As String, ByVal Truck As String, ByVal Type As String) As HaulageRow
            Return CType(Me.Rows.Find(New Object() {HaulageDate, HaulageShift, Source, SourceMineSite, Destination, DestinationMineSite, Truck, Type}),HaulageRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HaulageDataTable = CType(MyBase.Clone,HaulageDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HaulageDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHaulageDate = MyBase.Columns("HaulageDate")
            Me.columnHaulageShift = MyBase.Columns("HaulageShift")
            Me.columnSource = MyBase.Columns("Source")
            Me.columnSourceMineSite = MyBase.Columns("SourceMineSite")
            Me.columnDestination = MyBase.Columns("Destination")
            Me.columnDestinationMineSite = MyBase.Columns("DestinationMineSite")
            Me.columnTonnes = MyBase.Columns("Tonnes")
            Me.columnLoads = MyBase.Columns("Loads")
            Me.columnTruck = MyBase.Columns("Truck")
            Me.columnType = MyBase.Columns("Type")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHaulageDate = New Global.System.Data.DataColumn("HaulageDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaulageDate)
            Me.columnHaulageShift = New Global.System.Data.DataColumn("HaulageShift", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaulageShift)
            Me.columnSource = New Global.System.Data.DataColumn("Source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource)
            Me.columnSourceMineSite = New Global.System.Data.DataColumn("SourceMineSite", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSourceMineSite)
            Me.columnDestination = New Global.System.Data.DataColumn("Destination", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestination)
            Me.columnDestinationMineSite = New Global.System.Data.DataColumn("DestinationMineSite", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestinationMineSite)
            Me.columnTonnes = New Global.System.Data.DataColumn("Tonnes", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTonnes)
            Me.columnLoads = New Global.System.Data.DataColumn("Loads", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoads)
            Me.columnTruck = New Global.System.Data.DataColumn("Truck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTruck)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnHaulageDate, Me.columnHaulageShift, Me.columnSource, Me.columnSourceMineSite, Me.columnDestination, Me.columnDestinationMineSite, Me.columnTruck, Me.columnType}, true))
            Me.columnHaulageDate.AllowDBNull = false
            Me.columnHaulageDate.DateTimeMode = Global.System.Data.DataSetDateTime.Unspecified
            Me.columnHaulageShift.AllowDBNull = false
            Me.columnHaulageShift.MaxLength = 1
            Me.columnSource.AllowDBNull = false
            Me.columnSource.MaxLength = 63
            Me.columnSourceMineSite.AllowDBNull = false
            Me.columnSourceMineSite.MaxLength = 2
            Me.columnDestination.AllowDBNull = false
            Me.columnDestination.MaxLength = 63
            Me.columnDestinationMineSite.AllowDBNull = false
            Me.columnDestinationMineSite.MaxLength = 2
            Me.columnTruck.AllowDBNull = false
            Me.columnTruck.MaxLength = 31
            Me.columnType.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHaulageRow() As HaulageRow
            Return CType(Me.NewRow,HaulageRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HaulageRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HaulageRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HaulageRowChangedEvent) Is Nothing) Then
                RaiseEvent HaulageRowChanged(Me, New HaulageRowChangeEvent(CType(e.Row,HaulageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HaulageRowChangingEvent) Is Nothing) Then
                RaiseEvent HaulageRowChanging(Me, New HaulageRowChangeEvent(CType(e.Row,HaulageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HaulageRowDeletedEvent) Is Nothing) Then
                RaiseEvent HaulageRowDeleted(Me, New HaulageRowChangeEvent(CType(e.Row,HaulageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HaulageRowDeletingEvent) Is Nothing) Then
                RaiseEvent HaulageRowDeleting(Me, New HaulageRowChangeEvent(CType(e.Row,HaulageRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHaulageRow(ByVal row As HaulageRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HaulageSource = New HaulageSource()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HaulageDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HaulageNotesDataTable
        Inherits Global.System.Data.TypedTableBase(Of HaulageNotesRow)
        
        Private columnHaulageDate As Global.System.Data.DataColumn
        
        Private columnHaulageShift As Global.System.Data.DataColumn
        
        Private columnSource As Global.System.Data.DataColumn
        
        Private columnSourceMineSite As Global.System.Data.DataColumn
        
        Private columnDestination As Global.System.Data.DataColumn
        
        Private columnDestinationMineSite As Global.System.Data.DataColumn
        
        Private columnTruck As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        Private columnFieldId As Global.System.Data.DataColumn
        
        Private columnNotes As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HaulageNotes"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HaulageDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaulageDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HaulageShiftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaulageShift
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceMineSiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSourceMineSite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DestinationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestination
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DestinationMineSiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestinationMineSite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TruckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTruck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HaulageNotesRow
            Get
                Return CType(Me.Rows(index),HaulageNotesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageNotesRowChanging As HaulageNotesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageNotesRowChanged As HaulageNotesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageNotesRowDeleting As HaulageNotesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageNotesRowDeleted As HaulageNotesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHaulageNotesRow(ByVal row As HaulageNotesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHaulageNotesRow(ByVal HaulageDate As Date, ByVal HaulageShift As String, ByVal Source As String, ByVal SourceMineSite As String, ByVal Destination As String, ByVal DestinationMineSite As String, ByVal Truck As String, ByVal Type As String, ByVal FieldId As String, ByVal Notes As String) As HaulageNotesRow
            Dim rowHaulageNotesRow As HaulageNotesRow = CType(Me.NewRow,HaulageNotesRow)
            Dim columnValuesArray() As Object = New Object() {HaulageDate, HaulageShift, Source, SourceMineSite, Destination, DestinationMineSite, Truck, Type, FieldId, Notes}
            rowHaulageNotesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHaulageNotesRow)
            Return rowHaulageNotesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByHaulageDateHaulageShiftSourceSourceMineSiteDestinationDestinationMineSiteTruckTypeFieldId(ByVal HaulageDate As Date, ByVal HaulageShift As String, ByVal Source As String, ByVal SourceMineSite As String, ByVal Destination As String, ByVal DestinationMineSite As String, ByVal Truck As String, ByVal Type As String, ByVal FieldId As String) As HaulageNotesRow
            Return CType(Me.Rows.Find(New Object() {HaulageDate, HaulageShift, Source, SourceMineSite, Destination, DestinationMineSite, Truck, Type, FieldId}),HaulageNotesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HaulageNotesDataTable = CType(MyBase.Clone,HaulageNotesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HaulageNotesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHaulageDate = MyBase.Columns("HaulageDate")
            Me.columnHaulageShift = MyBase.Columns("HaulageShift")
            Me.columnSource = MyBase.Columns("Source")
            Me.columnSourceMineSite = MyBase.Columns("SourceMineSite")
            Me.columnDestination = MyBase.Columns("Destination")
            Me.columnDestinationMineSite = MyBase.Columns("DestinationMineSite")
            Me.columnTruck = MyBase.Columns("Truck")
            Me.columnType = MyBase.Columns("Type")
            Me.columnFieldId = MyBase.Columns("FieldId")
            Me.columnNotes = MyBase.Columns("Notes")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHaulageDate = New Global.System.Data.DataColumn("HaulageDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaulageDate)
            Me.columnHaulageShift = New Global.System.Data.DataColumn("HaulageShift", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaulageShift)
            Me.columnSource = New Global.System.Data.DataColumn("Source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource)
            Me.columnSourceMineSite = New Global.System.Data.DataColumn("SourceMineSite", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSourceMineSite)
            Me.columnDestination = New Global.System.Data.DataColumn("Destination", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestination)
            Me.columnDestinationMineSite = New Global.System.Data.DataColumn("DestinationMineSite", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestinationMineSite)
            Me.columnTruck = New Global.System.Data.DataColumn("Truck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTruck)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnFieldId = New Global.System.Data.DataColumn("FieldId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldId)
            Me.columnNotes = New Global.System.Data.DataColumn("Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotes)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnHaulageDate, Me.columnHaulageShift, Me.columnSource, Me.columnSourceMineSite, Me.columnDestination, Me.columnDestinationMineSite, Me.columnTruck, Me.columnType, Me.columnFieldId}, true))
            Me.columnHaulageDate.AllowDBNull = false
            Me.columnHaulageDate.DateTimeMode = Global.System.Data.DataSetDateTime.Unspecified
            Me.columnHaulageShift.AllowDBNull = false
            Me.columnHaulageShift.MaxLength = 1
            Me.columnSource.AllowDBNull = false
            Me.columnSource.MaxLength = 63
            Me.columnSourceMineSite.AllowDBNull = false
            Me.columnSourceMineSite.MaxLength = 2
            Me.columnDestination.AllowDBNull = false
            Me.columnDestination.MaxLength = 63
            Me.columnDestinationMineSite.AllowDBNull = false
            Me.columnDestinationMineSite.MaxLength = 2
            Me.columnTruck.AllowDBNull = false
            Me.columnTruck.MaxLength = 31
            Me.columnType.AllowDBNull = false
            Me.columnFieldId.AllowDBNull = false
            Me.columnFieldId.MaxLength = 31
            Me.columnNotes.MaxLength = 1023
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHaulageNotesRow() As HaulageNotesRow
            Return CType(Me.NewRow,HaulageNotesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HaulageNotesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HaulageNotesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HaulageNotesRowChangedEvent) Is Nothing) Then
                RaiseEvent HaulageNotesRowChanged(Me, New HaulageNotesRowChangeEvent(CType(e.Row,HaulageNotesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HaulageNotesRowChangingEvent) Is Nothing) Then
                RaiseEvent HaulageNotesRowChanging(Me, New HaulageNotesRowChangeEvent(CType(e.Row,HaulageNotesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HaulageNotesRowDeletedEvent) Is Nothing) Then
                RaiseEvent HaulageNotesRowDeleted(Me, New HaulageNotesRowChangeEvent(CType(e.Row,HaulageNotesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HaulageNotesRowDeletingEvent) Is Nothing) Then
                RaiseEvent HaulageNotesRowDeleting(Me, New HaulageNotesRowChangeEvent(CType(e.Row,HaulageNotesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHaulageNotesRow(ByVal row As HaulageNotesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HaulageSource = New HaulageSource()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HaulageNotesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HaulageValueDataTable
        Inherits Global.System.Data.TypedTableBase(Of HaulageValueRow)
        
        Private columnHaulageDate As Global.System.Data.DataColumn
        
        Private columnHaulageShift As Global.System.Data.DataColumn
        
        Private columnSource As Global.System.Data.DataColumn
        
        Private columnSourceMineSite As Global.System.Data.DataColumn
        
        Private columnDestination As Global.System.Data.DataColumn
        
        Private columnDestinationMineSite As Global.System.Data.DataColumn
        
        Private columnTruck As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        Private columnFieldId As Global.System.Data.DataColumn
        
        Private columnValue As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HaulageValue"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HaulageDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaulageDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HaulageShiftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaulageShift
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceMineSiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSourceMineSite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DestinationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestination
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DestinationMineSiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestinationMineSite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TruckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTruck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HaulageValueRow
            Get
                Return CType(Me.Rows(index),HaulageValueRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageValueRowChanging As HaulageValueRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageValueRowChanged As HaulageValueRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageValueRowDeleting As HaulageValueRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageValueRowDeleted As HaulageValueRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHaulageValueRow(ByVal row As HaulageValueRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHaulageValueRow(ByVal HaulageDate As Date, ByVal HaulageShift As String, ByVal Source As String, ByVal SourceMineSite As String, ByVal Destination As String, ByVal DestinationMineSite As String, ByVal Truck As String, ByVal Type As String, ByVal FieldId As String, ByVal Value As Double) As HaulageValueRow
            Dim rowHaulageValueRow As HaulageValueRow = CType(Me.NewRow,HaulageValueRow)
            Dim columnValuesArray() As Object = New Object() {HaulageDate, HaulageShift, Source, SourceMineSite, Destination, DestinationMineSite, Truck, Type, FieldId, Value}
            rowHaulageValueRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHaulageValueRow)
            Return rowHaulageValueRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByHaulageDateHaulageShiftSourceSourceMineSiteDestinationDestinationMineSiteTruckTypeFieldId(ByVal HaulageDate As Date, ByVal HaulageShift As String, ByVal Source As String, ByVal SourceMineSite As String, ByVal Destination As String, ByVal DestinationMineSite As String, ByVal Truck As String, ByVal Type As String, ByVal FieldId As String) As HaulageValueRow
            Return CType(Me.Rows.Find(New Object() {HaulageDate, HaulageShift, Source, SourceMineSite, Destination, DestinationMineSite, Truck, Type, FieldId}),HaulageValueRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HaulageValueDataTable = CType(MyBase.Clone,HaulageValueDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HaulageValueDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHaulageDate = MyBase.Columns("HaulageDate")
            Me.columnHaulageShift = MyBase.Columns("HaulageShift")
            Me.columnSource = MyBase.Columns("Source")
            Me.columnSourceMineSite = MyBase.Columns("SourceMineSite")
            Me.columnDestination = MyBase.Columns("Destination")
            Me.columnDestinationMineSite = MyBase.Columns("DestinationMineSite")
            Me.columnTruck = MyBase.Columns("Truck")
            Me.columnType = MyBase.Columns("Type")
            Me.columnFieldId = MyBase.Columns("FieldId")
            Me.columnValue = MyBase.Columns("Value")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHaulageDate = New Global.System.Data.DataColumn("HaulageDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaulageDate)
            Me.columnHaulageShift = New Global.System.Data.DataColumn("HaulageShift", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaulageShift)
            Me.columnSource = New Global.System.Data.DataColumn("Source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource)
            Me.columnSourceMineSite = New Global.System.Data.DataColumn("SourceMineSite", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSourceMineSite)
            Me.columnDestination = New Global.System.Data.DataColumn("Destination", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestination)
            Me.columnDestinationMineSite = New Global.System.Data.DataColumn("DestinationMineSite", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestinationMineSite)
            Me.columnTruck = New Global.System.Data.DataColumn("Truck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTruck)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnFieldId = New Global.System.Data.DataColumn("FieldId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldId)
            Me.columnValue = New Global.System.Data.DataColumn("Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValue)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnHaulageDate, Me.columnHaulageShift, Me.columnSource, Me.columnSourceMineSite, Me.columnDestination, Me.columnDestinationMineSite, Me.columnTruck, Me.columnType, Me.columnFieldId}, true))
            Me.columnHaulageDate.AllowDBNull = false
            Me.columnHaulageDate.DateTimeMode = Global.System.Data.DataSetDateTime.Unspecified
            Me.columnHaulageShift.AllowDBNull = false
            Me.columnHaulageShift.MaxLength = 1
            Me.columnSource.AllowDBNull = false
            Me.columnSource.MaxLength = 63
            Me.columnSourceMineSite.AllowDBNull = false
            Me.columnSourceMineSite.MaxLength = 2
            Me.columnDestination.AllowDBNull = false
            Me.columnDestination.MaxLength = 63
            Me.columnDestinationMineSite.AllowDBNull = false
            Me.columnDestinationMineSite.MaxLength = 2
            Me.columnTruck.AllowDBNull = false
            Me.columnTruck.MaxLength = 31
            Me.columnType.AllowDBNull = false
            Me.columnFieldId.AllowDBNull = false
            Me.columnFieldId.MaxLength = 31
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHaulageValueRow() As HaulageValueRow
            Return CType(Me.NewRow,HaulageValueRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HaulageValueRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HaulageValueRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HaulageValueRowChangedEvent) Is Nothing) Then
                RaiseEvent HaulageValueRowChanged(Me, New HaulageValueRowChangeEvent(CType(e.Row,HaulageValueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HaulageValueRowChangingEvent) Is Nothing) Then
                RaiseEvent HaulageValueRowChanging(Me, New HaulageValueRowChangeEvent(CType(e.Row,HaulageValueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HaulageValueRowDeletedEvent) Is Nothing) Then
                RaiseEvent HaulageValueRowDeleted(Me, New HaulageValueRowChangeEvent(CType(e.Row,HaulageValueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HaulageValueRowDeletingEvent) Is Nothing) Then
                RaiseEvent HaulageValueRowDeleting(Me, New HaulageValueRowChangeEvent(CType(e.Row,HaulageValueRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHaulageValueRow(ByVal row As HaulageValueRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HaulageSource = New HaulageSource()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HaulageValueDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HaulageGradeDataTable
        Inherits Global.System.Data.TypedTableBase(Of HaulageGradeRow)
        
        Private columnHaulageDate As Global.System.Data.DataColumn
        
        Private columnHaulageShift As Global.System.Data.DataColumn
        
        Private columnSource As Global.System.Data.DataColumn
        
        Private columnSourceMineSite As Global.System.Data.DataColumn
        
        Private columnDestination As Global.System.Data.DataColumn
        
        Private columnDestinationMineSite As Global.System.Data.DataColumn
        
        Private columnTruck As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        Private columnGradeName As Global.System.Data.DataColumn
        
        Private columnHeadValue As Global.System.Data.DataColumn
        
        Private columnLumpValue As Global.System.Data.DataColumn
        
        Private columnFinesValue As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HaulageGrade"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HaulageDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaulageDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HaulageShiftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaulageShift
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceMineSiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSourceMineSite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DestinationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestination
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DestinationMineSiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestinationMineSite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TruckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTruck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GradeNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGradeName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HeadValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHeadValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LumpValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLumpValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FinesValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinesValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HaulageGradeRow
            Get
                Return CType(Me.Rows(index),HaulageGradeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageGradeRowChanging As HaulageGradeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageGradeRowChanged As HaulageGradeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageGradeRowDeleting As HaulageGradeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event HaulageGradeRowDeleted As HaulageGradeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHaulageGradeRow(ByVal row As HaulageGradeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHaulageGradeRow(ByVal HaulageDate As Date, ByVal HaulageShift As String, ByVal Source As String, ByVal SourceMineSite As String, ByVal Destination As String, ByVal DestinationMineSite As String, ByVal Truck As String, ByVal Type As String, ByVal GradeName As String, ByVal HeadValue As Single, ByVal LumpValue As Double, ByVal FinesValue As Double) As HaulageGradeRow
            Dim rowHaulageGradeRow As HaulageGradeRow = CType(Me.NewRow,HaulageGradeRow)
            Dim columnValuesArray() As Object = New Object() {HaulageDate, HaulageShift, Source, SourceMineSite, Destination, DestinationMineSite, Truck, Type, GradeName, HeadValue, LumpValue, FinesValue}
            rowHaulageGradeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHaulageGradeRow)
            Return rowHaulageGradeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByHaulageDateHaulageShiftSourceSourceMineSiteDestinationDestinationMineSiteTruckTypeGradeName(ByVal HaulageDate As Date, ByVal HaulageShift As String, ByVal Source As String, ByVal SourceMineSite As String, ByVal Destination As String, ByVal DestinationMineSite As String, ByVal Truck As String, ByVal Type As String, ByVal GradeName As String) As HaulageGradeRow
            Return CType(Me.Rows.Find(New Object() {HaulageDate, HaulageShift, Source, SourceMineSite, Destination, DestinationMineSite, Truck, Type, GradeName}),HaulageGradeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HaulageGradeDataTable = CType(MyBase.Clone,HaulageGradeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HaulageGradeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHaulageDate = MyBase.Columns("HaulageDate")
            Me.columnHaulageShift = MyBase.Columns("HaulageShift")
            Me.columnSource = MyBase.Columns("Source")
            Me.columnSourceMineSite = MyBase.Columns("SourceMineSite")
            Me.columnDestination = MyBase.Columns("Destination")
            Me.columnDestinationMineSite = MyBase.Columns("DestinationMineSite")
            Me.columnTruck = MyBase.Columns("Truck")
            Me.columnType = MyBase.Columns("Type")
            Me.columnGradeName = MyBase.Columns("GradeName")
            Me.columnHeadValue = MyBase.Columns("HeadValue")
            Me.columnLumpValue = MyBase.Columns("LumpValue")
            Me.columnFinesValue = MyBase.Columns("FinesValue")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHaulageDate = New Global.System.Data.DataColumn("HaulageDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaulageDate)
            Me.columnHaulageShift = New Global.System.Data.DataColumn("HaulageShift", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaulageShift)
            Me.columnSource = New Global.System.Data.DataColumn("Source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource)
            Me.columnSourceMineSite = New Global.System.Data.DataColumn("SourceMineSite", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSourceMineSite)
            Me.columnDestination = New Global.System.Data.DataColumn("Destination", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestination)
            Me.columnDestinationMineSite = New Global.System.Data.DataColumn("DestinationMineSite", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestinationMineSite)
            Me.columnTruck = New Global.System.Data.DataColumn("Truck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTruck)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnGradeName = New Global.System.Data.DataColumn("GradeName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGradeName)
            Me.columnHeadValue = New Global.System.Data.DataColumn("HeadValue", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHeadValue)
            Me.columnLumpValue = New Global.System.Data.DataColumn("LumpValue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLumpValue)
            Me.columnFinesValue = New Global.System.Data.DataColumn("FinesValue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinesValue)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnHaulageDate, Me.columnHaulageShift, Me.columnSource, Me.columnSourceMineSite, Me.columnDestination, Me.columnDestinationMineSite, Me.columnTruck, Me.columnType, Me.columnGradeName}, true))
            Me.columnHaulageDate.AllowDBNull = false
            Me.columnHaulageDate.DateTimeMode = Global.System.Data.DataSetDateTime.Unspecified
            Me.columnHaulageShift.AllowDBNull = false
            Me.columnHaulageShift.MaxLength = 1
            Me.columnSource.AllowDBNull = false
            Me.columnSource.MaxLength = 63
            Me.columnSourceMineSite.AllowDBNull = false
            Me.columnSourceMineSite.MaxLength = 2
            Me.columnDestination.AllowDBNull = false
            Me.columnDestination.MaxLength = 63
            Me.columnDestinationMineSite.AllowDBNull = false
            Me.columnDestinationMineSite.MaxLength = 2
            Me.columnTruck.AllowDBNull = false
            Me.columnTruck.MaxLength = 31
            Me.columnType.AllowDBNull = false
            Me.columnGradeName.AllowDBNull = false
            Me.columnGradeName.MaxLength = 31
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHaulageGradeRow() As HaulageGradeRow
            Return CType(Me.NewRow,HaulageGradeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HaulageGradeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HaulageGradeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HaulageGradeRowChangedEvent) Is Nothing) Then
                RaiseEvent HaulageGradeRowChanged(Me, New HaulageGradeRowChangeEvent(CType(e.Row,HaulageGradeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HaulageGradeRowChangingEvent) Is Nothing) Then
                RaiseEvent HaulageGradeRowChanging(Me, New HaulageGradeRowChangeEvent(CType(e.Row,HaulageGradeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HaulageGradeRowDeletedEvent) Is Nothing) Then
                RaiseEvent HaulageGradeRowDeleted(Me, New HaulageGradeRowChangeEvent(CType(e.Row,HaulageGradeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HaulageGradeRowDeletingEvent) Is Nothing) Then
                RaiseEvent HaulageGradeRowDeleting(Me, New HaulageGradeRowChangeEvent(CType(e.Row,HaulageGradeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHaulageGradeRow(ByVal row As HaulageGradeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HaulageSource = New HaulageSource()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HaulageGradeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HaulageRow
        Inherits Global.System.Data.DataRow
        
        Private tableHaulage As HaulageDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHaulage = CType(Me.Table,HaulageDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaulageDate() As Date
            Get
                Return CType(Me(Me.tableHaulage.HaulageDateColumn),Date)
            End Get
            Set
                Me(Me.tableHaulage.HaulageDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaulageShift() As String
            Get
                Return CType(Me(Me.tableHaulage.HaulageShiftColumn),String)
            End Get
            Set
                Me(Me.tableHaulage.HaulageShiftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source() As String
            Get
                Return CType(Me(Me.tableHaulage.SourceColumn),String)
            End Get
            Set
                Me(Me.tableHaulage.SourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SourceMineSite() As String
            Get
                Return CType(Me(Me.tableHaulage.SourceMineSiteColumn),String)
            End Get
            Set
                Me(Me.tableHaulage.SourceMineSiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Destination() As String
            Get
                Return CType(Me(Me.tableHaulage.DestinationColumn),String)
            End Get
            Set
                Me(Me.tableHaulage.DestinationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DestinationMineSite() As String
            Get
                Return CType(Me(Me.tableHaulage.DestinationMineSiteColumn),String)
            End Get
            Set
                Me(Me.tableHaulage.DestinationMineSiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Tonnes() As Double
            Get
                Try 
                    Return CType(Me(Me.tableHaulage.TonnesColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tonnes' in table 'Haulage' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHaulage.TonnesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Loads() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHaulage.LoadsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Loads' in table 'Haulage' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHaulage.LoadsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Truck() As String
            Get
                Return CType(Me(Me.tableHaulage.TruckColumn),String)
            End Get
            Set
                Me(Me.tableHaulage.TruckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As String
            Get
                Return CType(Me(Me.tableHaulage.TypeColumn),String)
            End Get
            Set
                Me(Me.tableHaulage.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTonnesNull() As Boolean
            Return Me.IsNull(Me.tableHaulage.TonnesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTonnesNull()
            Me(Me.tableHaulage.TonnesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLoadsNull() As Boolean
            Return Me.IsNull(Me.tableHaulage.LoadsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLoadsNull()
            Me(Me.tableHaulage.LoadsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetHaulageGradeRows() As HaulageGradeRow()
            If (Me.Table.ChildRelations("FK_Haulage_HaulageGrade") Is Nothing) Then
                Return New HaulageGradeRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_Haulage_HaulageGrade")),HaulageGradeRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetHaulageValueRows() As HaulageValueRow()
            If (Me.Table.ChildRelations("FK_Haulage_HaulageValue") Is Nothing) Then
                Return New HaulageValueRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_Haulage_HaulageValue")),HaulageValueRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetHaulageNotesRows() As HaulageNotesRow()
            If (Me.Table.ChildRelations("FK_Haulage_HaulageNotes") Is Nothing) Then
                Return New HaulageNotesRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_Haulage_HaulageNotes")),HaulageNotesRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HaulageNotesRow
        Inherits Global.System.Data.DataRow
        
        Private tableHaulageNotes As HaulageNotesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHaulageNotes = CType(Me.Table,HaulageNotesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaulageDate() As Date
            Get
                Return CType(Me(Me.tableHaulageNotes.HaulageDateColumn),Date)
            End Get
            Set
                Me(Me.tableHaulageNotes.HaulageDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaulageShift() As String
            Get
                Return CType(Me(Me.tableHaulageNotes.HaulageShiftColumn),String)
            End Get
            Set
                Me(Me.tableHaulageNotes.HaulageShiftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source() As String
            Get
                Return CType(Me(Me.tableHaulageNotes.SourceColumn),String)
            End Get
            Set
                Me(Me.tableHaulageNotes.SourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SourceMineSite() As String
            Get
                Return CType(Me(Me.tableHaulageNotes.SourceMineSiteColumn),String)
            End Get
            Set
                Me(Me.tableHaulageNotes.SourceMineSiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Destination() As String
            Get
                Return CType(Me(Me.tableHaulageNotes.DestinationColumn),String)
            End Get
            Set
                Me(Me.tableHaulageNotes.DestinationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DestinationMineSite() As String
            Get
                Return CType(Me(Me.tableHaulageNotes.DestinationMineSiteColumn),String)
            End Get
            Set
                Me(Me.tableHaulageNotes.DestinationMineSiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Truck() As String
            Get
                Return CType(Me(Me.tableHaulageNotes.TruckColumn),String)
            End Get
            Set
                Me(Me.tableHaulageNotes.TruckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As String
            Get
                Return CType(Me(Me.tableHaulageNotes.TypeColumn),String)
            End Get
            Set
                Me(Me.tableHaulageNotes.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldId() As String
            Get
                Return CType(Me(Me.tableHaulageNotes.FieldIdColumn),String)
            End Get
            Set
                Me(Me.tableHaulageNotes.FieldIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Notes() As String
            Get
                Try 
                    Return CType(Me(Me.tableHaulageNotes.NotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Notes' in table 'HaulageNotes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHaulageNotes.NotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaulageRowParent() As HaulageRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_Haulage_HaulageNotes")),HaulageRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_Haulage_HaulageNotes"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotesNull() As Boolean
            Return Me.IsNull(Me.tableHaulageNotes.NotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotesNull()
            Me(Me.tableHaulageNotes.NotesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HaulageValueRow
        Inherits Global.System.Data.DataRow
        
        Private tableHaulageValue As HaulageValueDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHaulageValue = CType(Me.Table,HaulageValueDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaulageDate() As Date
            Get
                Return CType(Me(Me.tableHaulageValue.HaulageDateColumn),Date)
            End Get
            Set
                Me(Me.tableHaulageValue.HaulageDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaulageShift() As String
            Get
                Return CType(Me(Me.tableHaulageValue.HaulageShiftColumn),String)
            End Get
            Set
                Me(Me.tableHaulageValue.HaulageShiftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source() As String
            Get
                Return CType(Me(Me.tableHaulageValue.SourceColumn),String)
            End Get
            Set
                Me(Me.tableHaulageValue.SourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SourceMineSite() As String
            Get
                Return CType(Me(Me.tableHaulageValue.SourceMineSiteColumn),String)
            End Get
            Set
                Me(Me.tableHaulageValue.SourceMineSiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Destination() As String
            Get
                Return CType(Me(Me.tableHaulageValue.DestinationColumn),String)
            End Get
            Set
                Me(Me.tableHaulageValue.DestinationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DestinationMineSite() As String
            Get
                Return CType(Me(Me.tableHaulageValue.DestinationMineSiteColumn),String)
            End Get
            Set
                Me(Me.tableHaulageValue.DestinationMineSiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Truck() As String
            Get
                Return CType(Me(Me.tableHaulageValue.TruckColumn),String)
            End Get
            Set
                Me(Me.tableHaulageValue.TruckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As String
            Get
                Return CType(Me(Me.tableHaulageValue.TypeColumn),String)
            End Get
            Set
                Me(Me.tableHaulageValue.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldId() As String
            Get
                Return CType(Me(Me.tableHaulageValue.FieldIdColumn),String)
            End Get
            Set
                Me(Me.tableHaulageValue.FieldIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableHaulageValue.ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Value' in table 'HaulageValue' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHaulageValue.ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaulageRowParent() As HaulageRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_Haulage_HaulageValue")),HaulageRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_Haulage_HaulageValue"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsValueNull() As Boolean
            Return Me.IsNull(Me.tableHaulageValue.ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetValueNull()
            Me(Me.tableHaulageValue.ValueColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HaulageGradeRow
        Inherits Global.System.Data.DataRow
        
        Private tableHaulageGrade As HaulageGradeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHaulageGrade = CType(Me.Table,HaulageGradeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaulageDate() As Date
            Get
                Return CType(Me(Me.tableHaulageGrade.HaulageDateColumn),Date)
            End Get
            Set
                Me(Me.tableHaulageGrade.HaulageDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaulageShift() As String
            Get
                Return CType(Me(Me.tableHaulageGrade.HaulageShiftColumn),String)
            End Get
            Set
                Me(Me.tableHaulageGrade.HaulageShiftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source() As String
            Get
                Return CType(Me(Me.tableHaulageGrade.SourceColumn),String)
            End Get
            Set
                Me(Me.tableHaulageGrade.SourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SourceMineSite() As String
            Get
                Return CType(Me(Me.tableHaulageGrade.SourceMineSiteColumn),String)
            End Get
            Set
                Me(Me.tableHaulageGrade.SourceMineSiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Destination() As String
            Get
                Return CType(Me(Me.tableHaulageGrade.DestinationColumn),String)
            End Get
            Set
                Me(Me.tableHaulageGrade.DestinationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DestinationMineSite() As String
            Get
                Return CType(Me(Me.tableHaulageGrade.DestinationMineSiteColumn),String)
            End Get
            Set
                Me(Me.tableHaulageGrade.DestinationMineSiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Truck() As String
            Get
                Return CType(Me(Me.tableHaulageGrade.TruckColumn),String)
            End Get
            Set
                Me(Me.tableHaulageGrade.TruckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As String
            Get
                Return CType(Me(Me.tableHaulageGrade.TypeColumn),String)
            End Get
            Set
                Me(Me.tableHaulageGrade.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GradeName() As String
            Get
                Return CType(Me(Me.tableHaulageGrade.GradeNameColumn),String)
            End Get
            Set
                Me(Me.tableHaulageGrade.GradeNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HeadValue() As Single
            Get
                Try 
                    Return CType(Me(Me.tableHaulageGrade.HeadValueColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HeadValue' in table 'HaulageGrade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHaulageGrade.HeadValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LumpValue() As Double
            Get
                Try 
                    Return CType(Me(Me.tableHaulageGrade.LumpValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LumpValue' in table 'HaulageGrade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHaulageGrade.LumpValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FinesValue() As Double
            Get
                Try 
                    Return CType(Me(Me.tableHaulageGrade.FinesValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FinesValue' in table 'HaulageGrade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHaulageGrade.FinesValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HaulageRowParent() As HaulageRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_Haulage_HaulageGrade")),HaulageRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_Haulage_HaulageGrade"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHeadValueNull() As Boolean
            Return Me.IsNull(Me.tableHaulageGrade.HeadValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHeadValueNull()
            Me(Me.tableHaulageGrade.HeadValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLumpValueNull() As Boolean
            Return Me.IsNull(Me.tableHaulageGrade.LumpValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLumpValueNull()
            Me(Me.tableHaulageGrade.LumpValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFinesValueNull() As Boolean
            Return Me.IsNull(Me.tableHaulageGrade.FinesValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFinesValueNull()
            Me(Me.tableHaulageGrade.FinesValueColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HaulageRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HaulageRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HaulageRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HaulageRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HaulageNotesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HaulageNotesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HaulageNotesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HaulageNotesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HaulageValueRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HaulageValueRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HaulageValueRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HaulageValueRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class HaulageGradeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HaulageGradeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As HaulageGradeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As HaulageGradeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
