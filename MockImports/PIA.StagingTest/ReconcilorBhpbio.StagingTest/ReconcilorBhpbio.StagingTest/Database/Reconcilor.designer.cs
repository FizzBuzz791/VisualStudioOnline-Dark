#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReconcilorBhpbio.StagingTest.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ReconcilorBhpbioV64")]
	public partial class ReconcilorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChangedDataEntry(ChangedDataEntry instance);
    partial void UpdateChangedDataEntry(ChangedDataEntry instance);
    partial void DeleteChangedDataEntry(ChangedDataEntry instance);
    partial void InsertChangedDataEntryRelatedKeyValue(ChangedDataEntryRelatedKeyValue instance);
    partial void UpdateChangedDataEntryRelatedKeyValue(ChangedDataEntryRelatedKeyValue instance);
    partial void DeleteChangedDataEntryRelatedKeyValue(ChangedDataEntryRelatedKeyValue instance);
    partial void InsertStageBlock(StageBlock instance);
    partial void UpdateStageBlock(StageBlock instance);
    partial void DeleteStageBlock(StageBlock instance);
    partial void InsertStageBlockPoint(StageBlockPoint instance);
    partial void UpdateStageBlockPoint(StageBlockPoint instance);
    partial void DeleteStageBlockPoint(StageBlockPoint instance);
    partial void InsertStageBlockModelGrade(StageBlockModelGrade instance);
    partial void UpdateStageBlockModelGrade(StageBlockModelGrade instance);
    partial void DeleteStageBlockModelGrade(StageBlockModelGrade instance);
    partial void InsertStageBlockModel(StageBlockModel instance);
    partial void UpdateStageBlockModel(StageBlockModel instance);
    partial void DeleteStageBlockModel(StageBlockModel instance);
    #endregion
		
		public ReconcilorDataContext() : 
				base(global::ReconcilorBhpbio.StagingTest.Properties.Settings.Default.ReconcilorBhpbioV64ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ReconcilorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReconcilorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReconcilorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReconcilorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChangedDataEntry> ChangedDataEntries
		{
			get
			{
				return this.GetTable<ChangedDataEntry>();
			}
		}
		
		public System.Data.Linq.Table<ChangedDataEntryRelatedKeyValue> ChangedDataEntryRelatedKeyValues
		{
			get
			{
				return this.GetTable<ChangedDataEntryRelatedKeyValue>();
			}
		}
		
		public System.Data.Linq.Table<StageBlock> StageBlocks
		{
			get
			{
				return this.GetTable<StageBlock>();
			}
		}
		
		public System.Data.Linq.Table<StageBlockPoint> StageBlockPoints
		{
			get
			{
				return this.GetTable<StageBlockPoint>();
			}
		}
		
		public System.Data.Linq.Table<StageBlockModelGrade> StageBlockModelGrades
		{
			get
			{
				return this.GetTable<StageBlockModelGrade>();
			}
		}
		
		public System.Data.Linq.Table<StageBlockModel> StageBlockModels
		{
			get
			{
				return this.GetTable<StageBlockModel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Staging.ChangedDataEntry")]
	public partial class ChangedDataEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _ChangeAppliedDateTime;
		
		private System.Nullable<System.DateTime> _MessageTimestamp;
		
		private string _ChangeTypeId;
		
		private EntitySet<ChangedDataEntryRelatedKeyValue> _ChangedDataEntryRelatedKeyValues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnChangeAppliedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeAppliedDateTimeChanged();
    partial void OnMessageTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnMessageTimestampChanged();
    partial void OnChangeTypeIdChanging(string value);
    partial void OnChangeTypeIdChanged();
    #endregion
		
		public ChangedDataEntry()
		{
			this._ChangedDataEntryRelatedKeyValues = new EntitySet<ChangedDataEntryRelatedKeyValue>(new Action<ChangedDataEntryRelatedKeyValue>(this.attach_ChangedDataEntryRelatedKeyValues), new Action<ChangedDataEntryRelatedKeyValue>(this.detach_ChangedDataEntryRelatedKeyValues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeAppliedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeAppliedDateTime
		{
			get
			{
				return this._ChangeAppliedDateTime;
			}
			set
			{
				if ((this._ChangeAppliedDateTime != value))
				{
					this.OnChangeAppliedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangeAppliedDateTime = value;
					this.SendPropertyChanged("ChangeAppliedDateTime");
					this.OnChangeAppliedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> MessageTimestamp
		{
			get
			{
				return this._MessageTimestamp;
			}
			set
			{
				if ((this._MessageTimestamp != value))
				{
					this.OnMessageTimestampChanging(value);
					this.SendPropertyChanging();
					this._MessageTimestamp = value;
					this.SendPropertyChanged("MessageTimestamp");
					this.OnMessageTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeTypeId", DbType="NVarChar(60)")]
		public string ChangeTypeId
		{
			get
			{
				return this._ChangeTypeId;
			}
			set
			{
				if ((this._ChangeTypeId != value))
				{
					this.OnChangeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ChangeTypeId = value;
					this.SendPropertyChanged("ChangeTypeId");
					this.OnChangeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChangedDataEntry_ChangedDataEntryRelatedKeyValue", Storage="_ChangedDataEntryRelatedKeyValues", ThisKey="Id", OtherKey="ChangedDataEntryId")]
		public EntitySet<ChangedDataEntryRelatedKeyValue> ChangedDataEntryRelatedKeyValues
		{
			get
			{
				return this._ChangedDataEntryRelatedKeyValues;
			}
			set
			{
				this._ChangedDataEntryRelatedKeyValues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChangedDataEntryRelatedKeyValues(ChangedDataEntryRelatedKeyValue entity)
		{
			this.SendPropertyChanging();
			entity.ChangedDataEntry = this;
		}
		
		private void detach_ChangedDataEntryRelatedKeyValues(ChangedDataEntryRelatedKeyValue entity)
		{
			this.SendPropertyChanging();
			entity.ChangedDataEntry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Staging.ChangedDataEntryRelatedKeyValue")]
	public partial class ChangedDataEntryRelatedKeyValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ChangedDataEntryId;
		
		private string _ChangeKeyId;
		
		private string _TextValue;
		
		private EntityRef<ChangedDataEntry> _ChangedDataEntry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnChangedDataEntryIdChanging(System.Nullable<int> value);
    partial void OnChangedDataEntryIdChanged();
    partial void OnChangeKeyIdChanging(string value);
    partial void OnChangeKeyIdChanged();
    partial void OnTextValueChanging(string value);
    partial void OnTextValueChanged();
    #endregion
		
		public ChangedDataEntryRelatedKeyValue()
		{
			this._ChangedDataEntry = default(EntityRef<ChangedDataEntry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedDataEntryId", DbType="Int")]
		public System.Nullable<int> ChangedDataEntryId
		{
			get
			{
				return this._ChangedDataEntryId;
			}
			set
			{
				if ((this._ChangedDataEntryId != value))
				{
					if (this._ChangedDataEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChangedDataEntryIdChanging(value);
					this.SendPropertyChanging();
					this._ChangedDataEntryId = value;
					this.SendPropertyChanged("ChangedDataEntryId");
					this.OnChangedDataEntryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ChangeKey", Storage="_ChangeKeyId", DbType="NVarChar(60)")]
		public string ChangeKeyId
		{
			get
			{
				return this._ChangeKeyId;
			}
			set
			{
				if ((this._ChangeKeyId != value))
				{
					this.OnChangeKeyIdChanging(value);
					this.SendPropertyChanging();
					this._ChangeKeyId = value;
					this.SendPropertyChanged("ChangeKeyId");
					this.OnChangeKeyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextValue", DbType="NVarChar(120)")]
		public string TextValue
		{
			get
			{
				return this._TextValue;
			}
			set
			{
				if ((this._TextValue != value))
				{
					this.OnTextValueChanging(value);
					this.SendPropertyChanging();
					this._TextValue = value;
					this.SendPropertyChanged("TextValue");
					this.OnTextValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChangedDataEntry_ChangedDataEntryRelatedKeyValue", Storage="_ChangedDataEntry", ThisKey="ChangedDataEntryId", OtherKey="Id", IsForeignKey=true)]
		public ChangedDataEntry ChangedDataEntry
		{
			get
			{
				return this._ChangedDataEntry.Entity;
			}
			set
			{
				ChangedDataEntry previousValue = this._ChangedDataEntry.Entity;
				if (((previousValue != value) 
							|| (this._ChangedDataEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChangedDataEntry.Entity = null;
						previousValue.ChangedDataEntryRelatedKeyValues.Remove(this);
					}
					this._ChangedDataEntry.Entity = value;
					if ((value != null))
					{
						value.ChangedDataEntryRelatedKeyValues.Add(this);
						this._ChangedDataEntryId = value.Id;
					}
					else
					{
						this._ChangedDataEntryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChangedDataEntry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Staging.StageBlock")]
	public partial class StageBlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlockId;
		
		private string _BlockExternalSystemId;
		
		private string _BlockNumber;
		
		private string _BlockName;
		
		private string _BlockFullName;
		
		private string _LithologyTypeName;
		
		private System.DateTime _BlockedDate;
		
		private System.Nullable<System.DateTime> _BlastedDate;
		
		private string _Site;
		
		private string _Orebody;
		
		private string _Pit;
		
		private string _Bench;
		
		private string _PatternNumber;
		
		private string _AlternativePitCode;
		
		private System.Nullable<double> _CentroidX;
		
		private System.Nullable<double> _CentroidY;
		
		private System.Nullable<double> _CentroidZ;
		
		private System.Nullable<System.DateTime> _LastMessageTimestamp;
		
		private EntitySet<StageBlockPoint> _StageBlockPoints;
		
		private EntitySet<StageBlockModel> _StageBlockModels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlockIdChanging(int value);
    partial void OnBlockIdChanged();
    partial void OnBlockExternalSystemIdChanging(string value);
    partial void OnBlockExternalSystemIdChanged();
    partial void OnBlockNumberChanging(string value);
    partial void OnBlockNumberChanged();
    partial void OnBlockNameChanging(string value);
    partial void OnBlockNameChanged();
    partial void OnBlockFullNameChanging(string value);
    partial void OnBlockFullNameChanged();
    partial void OnLithologyTypeNameChanging(string value);
    partial void OnLithologyTypeNameChanged();
    partial void OnBlockedDateChanging(System.DateTime value);
    partial void OnBlockedDateChanged();
    partial void OnBlastedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBlastedDateChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    partial void OnOrebodyChanging(string value);
    partial void OnOrebodyChanged();
    partial void OnPitChanging(string value);
    partial void OnPitChanged();
    partial void OnBenchChanging(string value);
    partial void OnBenchChanged();
    partial void OnPatternNumberChanging(string value);
    partial void OnPatternNumberChanged();
    partial void OnAlternativePitCodeChanging(string value);
    partial void OnAlternativePitCodeChanged();
    partial void OnCentroidXChanging(System.Nullable<double> value);
    partial void OnCentroidXChanged();
    partial void OnCentroidYChanging(System.Nullable<double> value);
    partial void OnCentroidYChanged();
    partial void OnCentroidZChanging(System.Nullable<double> value);
    partial void OnCentroidZChanged();
    partial void OnLastMessageTimestampChanging(System.Nullable<System.DateTime> value);
    partial void OnLastMessageTimestampChanged();
    #endregion
		
		public StageBlock()
		{
			this._StageBlockPoints = new EntitySet<StageBlockPoint>(new Action<StageBlockPoint>(this.attach_StageBlockPoints), new Action<StageBlockPoint>(this.detach_StageBlockPoints));
			this._StageBlockModels = new EntitySet<StageBlockModel>(new Action<StageBlockModel>(this.attach_StageBlockModels), new Action<StageBlockModel>(this.detach_StageBlockModels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlockId
		{
			get
			{
				return this._BlockId;
			}
			set
			{
				if ((this._BlockId != value))
				{
					this.OnBlockIdChanging(value);
					this.SendPropertyChanging();
					this._BlockId = value;
					this.SendPropertyChanged("BlockId");
					this.OnBlockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockExternalSystemId", DbType="VarChar(255)")]
		public string BlockExternalSystemId
		{
			get
			{
				return this._BlockExternalSystemId;
			}
			set
			{
				if ((this._BlockExternalSystemId != value))
				{
					this.OnBlockExternalSystemIdChanging(value);
					this.SendPropertyChanging();
					this._BlockExternalSystemId = value;
					this.SendPropertyChanged("BlockExternalSystemId");
					this.OnBlockExternalSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockNumber", DbType="VarChar(2)")]
		public string BlockNumber
		{
			get
			{
				return this._BlockNumber;
			}
			set
			{
				if ((this._BlockNumber != value))
				{
					this.OnBlockNumberChanging(value);
					this.SendPropertyChanging();
					this._BlockNumber = value;
					this.SendPropertyChanged("BlockNumber");
					this.OnBlockNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockName", DbType="VarChar(14)")]
		public string BlockName
		{
			get
			{
				return this._BlockName;
			}
			set
			{
				if ((this._BlockName != value))
				{
					this.OnBlockNameChanging(value);
					this.SendPropertyChanging();
					this._BlockName = value;
					this.SendPropertyChanged("BlockName");
					this.OnBlockNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockFullName", DbType="VarChar(50)")]
		public string BlockFullName
		{
			get
			{
				return this._BlockFullName;
			}
			set
			{
				if ((this._BlockFullName != value))
				{
					this.OnBlockFullNameChanging(value);
					this.SendPropertyChanging();
					this._BlockFullName = value;
					this.SendPropertyChanged("BlockFullName");
					this.OnBlockFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LithologyTypeName", DbType="VarChar(9)")]
		public string LithologyTypeName
		{
			get
			{
				return this._LithologyTypeName;
			}
			set
			{
				if ((this._LithologyTypeName != value))
				{
					this.OnLithologyTypeNameChanging(value);
					this.SendPropertyChanging();
					this._LithologyTypeName = value;
					this.SendPropertyChanged("LithologyTypeName");
					this.OnLithologyTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockedDate", DbType="DateTime NOT NULL")]
		public System.DateTime BlockedDate
		{
			get
			{
				return this._BlockedDate;
			}
			set
			{
				if ((this._BlockedDate != value))
				{
					this.OnBlockedDateChanging(value);
					this.SendPropertyChanging();
					this._BlockedDate = value;
					this.SendPropertyChanged("BlockedDate");
					this.OnBlockedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlastedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BlastedDate
		{
			get
			{
				return this._BlastedDate;
			}
			set
			{
				if ((this._BlastedDate != value))
				{
					this.OnBlastedDateChanging(value);
					this.SendPropertyChanging();
					this._BlastedDate = value;
					this.SendPropertyChanged("BlastedDate");
					this.OnBlastedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="VarChar(16)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orebody", DbType="VarChar(16)")]
		public string Orebody
		{
			get
			{
				return this._Orebody;
			}
			set
			{
				if ((this._Orebody != value))
				{
					this.OnOrebodyChanging(value);
					this.SendPropertyChanging();
					this._Orebody = value;
					this.SendPropertyChanged("Orebody");
					this.OnOrebodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pit", DbType="VarChar(16)")]
		public string Pit
		{
			get
			{
				return this._Pit;
			}
			set
			{
				if ((this._Pit != value))
				{
					this.OnPitChanging(value);
					this.SendPropertyChanging();
					this._Pit = value;
					this.SendPropertyChanged("Pit");
					this.OnPitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bench", DbType="VarChar(16)")]
		public string Bench
		{
			get
			{
				return this._Bench;
			}
			set
			{
				if ((this._Bench != value))
				{
					this.OnBenchChanging(value);
					this.SendPropertyChanging();
					this._Bench = value;
					this.SendPropertyChanged("Bench");
					this.OnBenchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternNumber", DbType="VarChar(16)")]
		public string PatternNumber
		{
			get
			{
				return this._PatternNumber;
			}
			set
			{
				if ((this._PatternNumber != value))
				{
					this.OnPatternNumberChanging(value);
					this.SendPropertyChanging();
					this._PatternNumber = value;
					this.SendPropertyChanged("PatternNumber");
					this.OnPatternNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativePitCode", DbType="VarChar(10)")]
		public string AlternativePitCode
		{
			get
			{
				return this._AlternativePitCode;
			}
			set
			{
				if ((this._AlternativePitCode != value))
				{
					this.OnAlternativePitCodeChanging(value);
					this.SendPropertyChanging();
					this._AlternativePitCode = value;
					this.SendPropertyChanged("AlternativePitCode");
					this.OnAlternativePitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CentroidX", DbType="Float")]
		public System.Nullable<double> CentroidX
		{
			get
			{
				return this._CentroidX;
			}
			set
			{
				if ((this._CentroidX != value))
				{
					this.OnCentroidXChanging(value);
					this.SendPropertyChanging();
					this._CentroidX = value;
					this.SendPropertyChanged("CentroidX");
					this.OnCentroidXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CentroidY", DbType="Float")]
		public System.Nullable<double> CentroidY
		{
			get
			{
				return this._CentroidY;
			}
			set
			{
				if ((this._CentroidY != value))
				{
					this.OnCentroidYChanging(value);
					this.SendPropertyChanging();
					this._CentroidY = value;
					this.SendPropertyChanged("CentroidY");
					this.OnCentroidYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CentroidZ", DbType="Float")]
		public System.Nullable<double> CentroidZ
		{
			get
			{
				return this._CentroidZ;
			}
			set
			{
				if ((this._CentroidZ != value))
				{
					this.OnCentroidZChanging(value);
					this.SendPropertyChanging();
					this._CentroidZ = value;
					this.SendPropertyChanged("CentroidZ");
					this.OnCentroidZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMessageTimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastMessageTimestamp
		{
			get
			{
				return this._LastMessageTimestamp;
			}
			set
			{
				if ((this._LastMessageTimestamp != value))
				{
					this.OnLastMessageTimestampChanging(value);
					this.SendPropertyChanging();
					this._LastMessageTimestamp = value;
					this.SendPropertyChanged("LastMessageTimestamp");
					this.OnLastMessageTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StageBlock_StageBlockPoint", Storage="_StageBlockPoints", ThisKey="BlockId", OtherKey="BlockId")]
		public EntitySet<StageBlockPoint> StageBlockPoints
		{
			get
			{
				return this._StageBlockPoints;
			}
			set
			{
				this._StageBlockPoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StageBlock_StageBlockModel", Storage="_StageBlockModels", ThisKey="BlockId", OtherKey="BlockId")]
		public EntitySet<StageBlockModel> StageBlockModels
		{
			get
			{
				return this._StageBlockModels;
			}
			set
			{
				this._StageBlockModels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StageBlockPoints(StageBlockPoint entity)
		{
			this.SendPropertyChanging();
			entity.StageBlock = this;
		}
		
		private void detach_StageBlockPoints(StageBlockPoint entity)
		{
			this.SendPropertyChanging();
			entity.StageBlock = null;
		}
		
		private void attach_StageBlockModels(StageBlockModel entity)
		{
			this.SendPropertyChanging();
			entity.StageBlock = this;
		}
		
		private void detach_StageBlockModels(StageBlockModel entity)
		{
			this.SendPropertyChanging();
			entity.StageBlock = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Staging.StageBlockPoint")]
	public partial class StageBlockPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlockId;
		
		private int _Number;
		
		private string _BlockExternalSystemId;
		
		private double _X;
		
		private double _Y;
		
		private double _Z;
		
		private EntityRef<StageBlock> _StageBlock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlockIdChanging(int value);
    partial void OnBlockIdChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnBlockExternalSystemIdChanging(string value);
    partial void OnBlockExternalSystemIdChanged();
    partial void OnXChanging(double value);
    partial void OnXChanged();
    partial void OnYChanging(double value);
    partial void OnYChanged();
    partial void OnZChanging(double value);
    partial void OnZChanged();
    #endregion
		
		public StageBlockPoint()
		{
			this._StageBlock = default(EntityRef<StageBlock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BlockId
		{
			get
			{
				return this._BlockId;
			}
			set
			{
				if ((this._BlockId != value))
				{
					if (this._StageBlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockIdChanging(value);
					this.SendPropertyChanging();
					this._BlockId = value;
					this.SendPropertyChanged("BlockId");
					this.OnBlockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockExternalSystemId", DbType="VarChar(255)")]
		public string BlockExternalSystemId
		{
			get
			{
				return this._BlockExternalSystemId;
			}
			set
			{
				if ((this._BlockExternalSystemId != value))
				{
					this.OnBlockExternalSystemIdChanging(value);
					this.SendPropertyChanging();
					this._BlockExternalSystemId = value;
					this.SendPropertyChanged("BlockExternalSystemId");
					this.OnBlockExternalSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Float NOT NULL")]
		public double X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Float NOT NULL")]
		public double Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Z", DbType="Float NOT NULL")]
		public double Z
		{
			get
			{
				return this._Z;
			}
			set
			{
				if ((this._Z != value))
				{
					this.OnZChanging(value);
					this.SendPropertyChanging();
					this._Z = value;
					this.SendPropertyChanged("Z");
					this.OnZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StageBlock_StageBlockPoint", Storage="_StageBlock", ThisKey="BlockId", OtherKey="BlockId", IsForeignKey=true)]
		public StageBlock StageBlock
		{
			get
			{
				return this._StageBlock.Entity;
			}
			set
			{
				StageBlock previousValue = this._StageBlock.Entity;
				if (((previousValue != value) 
							|| (this._StageBlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StageBlock.Entity = null;
						previousValue.StageBlockPoints.Remove(this);
					}
					this._StageBlock.Entity = value;
					if ((value != null))
					{
						value.StageBlockPoints.Add(this);
						this._BlockId = value.BlockId;
					}
					else
					{
						this._BlockId = default(int);
					}
					this.SendPropertyChanged("StageBlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Staging.StageBlockModelGrade")]
	public partial class StageBlockModelGrade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlockId;
		
		private string _BlockModelName;
		
		private string _MaterialTypeName;
		
		private string _GradeName;
		
		private string _BlockExternalSystemId;
		
		private System.Nullable<double> _GradeValue;
		
		private System.Nullable<double> _LumpValue;
		
		private System.Nullable<double> _FinesValue;
		
		private EntityRef<StageBlockModel> _StageBlockModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlockIdChanging(int value);
    partial void OnBlockIdChanged();
    partial void OnBlockModelNameChanging(string value);
    partial void OnBlockModelNameChanged();
    partial void OnMaterialTypeNameChanging(string value);
    partial void OnMaterialTypeNameChanged();
    partial void OnGradeNameChanging(string value);
    partial void OnGradeNameChanged();
    partial void OnBlockExternalSystemIdChanging(string value);
    partial void OnBlockExternalSystemIdChanged();
    partial void OnGradeValueChanging(System.Nullable<double> value);
    partial void OnGradeValueChanged();
    partial void OnLumpValueChanging(System.Nullable<double> value);
    partial void OnLumpValueChanged();
    partial void OnFinesValueChanging(System.Nullable<double> value);
    partial void OnFinesValueChanged();
    #endregion
		
		public StageBlockModelGrade()
		{
			this._StageBlockModel = default(EntityRef<StageBlockModel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BlockId
		{
			get
			{
				return this._BlockId;
			}
			set
			{
				if ((this._BlockId != value))
				{
					if (this._StageBlockModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockIdChanging(value);
					this.SendPropertyChanging();
					this._BlockId = value;
					this.SendPropertyChanged("BlockId");
					this.OnBlockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockModelName", DbType="VarChar(31) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BlockModelName
		{
			get
			{
				return this._BlockModelName;
			}
			set
			{
				if ((this._BlockModelName != value))
				{
					if (this._StageBlockModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockModelNameChanging(value);
					this.SendPropertyChanging();
					this._BlockModelName = value;
					this.SendPropertyChanged("BlockModelName");
					this.OnBlockModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialTypeName", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaterialTypeName
		{
			get
			{
				return this._MaterialTypeName;
			}
			set
			{
				if ((this._MaterialTypeName != value))
				{
					if (this._StageBlockModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialTypeNameChanging(value);
					this.SendPropertyChanging();
					this._MaterialTypeName = value;
					this.SendPropertyChanged("MaterialTypeName");
					this.OnMaterialTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="VarChar(31) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this.OnGradeNameChanging(value);
					this.SendPropertyChanging();
					this._GradeName = value;
					this.SendPropertyChanged("GradeName");
					this.OnGradeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockExternalSystemId", DbType="VarChar(255)")]
		public string BlockExternalSystemId
		{
			get
			{
				return this._BlockExternalSystemId;
			}
			set
			{
				if ((this._BlockExternalSystemId != value))
				{
					this.OnBlockExternalSystemIdChanging(value);
					this.SendPropertyChanging();
					this._BlockExternalSystemId = value;
					this.SendPropertyChanged("BlockExternalSystemId");
					this.OnBlockExternalSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeValue", DbType="Float")]
		public System.Nullable<double> GradeValue
		{
			get
			{
				return this._GradeValue;
			}
			set
			{
				if ((this._GradeValue != value))
				{
					this.OnGradeValueChanging(value);
					this.SendPropertyChanging();
					this._GradeValue = value;
					this.SendPropertyChanged("GradeValue");
					this.OnGradeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LumpValue", DbType="Float")]
		public System.Nullable<double> LumpValue
		{
			get
			{
				return this._LumpValue;
			}
			set
			{
				if ((this._LumpValue != value))
				{
					this.OnLumpValueChanging(value);
					this.SendPropertyChanging();
					this._LumpValue = value;
					this.SendPropertyChanged("LumpValue");
					this.OnLumpValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinesValue", DbType="Float")]
		public System.Nullable<double> FinesValue
		{
			get
			{
				return this._FinesValue;
			}
			set
			{
				if ((this._FinesValue != value))
				{
					this.OnFinesValueChanging(value);
					this.SendPropertyChanging();
					this._FinesValue = value;
					this.SendPropertyChanged("FinesValue");
					this.OnFinesValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StageBlockModel_StageBlockModelGrade", Storage="_StageBlockModel", ThisKey="BlockId,BlockModelName,MaterialTypeName", OtherKey="BlockId,BlockModelName,MaterialTypeName", IsForeignKey=true)]
		public StageBlockModel StageBlockModel
		{
			get
			{
				return this._StageBlockModel.Entity;
			}
			set
			{
				StageBlockModel previousValue = this._StageBlockModel.Entity;
				if (((previousValue != value) 
							|| (this._StageBlockModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StageBlockModel.Entity = null;
						previousValue.StageBlockModelGrades.Remove(this);
					}
					this._StageBlockModel.Entity = value;
					if ((value != null))
					{
						value.StageBlockModelGrades.Add(this);
						this._BlockId = value.BlockId;
						this._BlockModelName = value.BlockModelName;
						this._MaterialTypeName = value.MaterialTypeName;
					}
					else
					{
						this._BlockId = default(int);
						this._BlockModelName = default(string);
						this._MaterialTypeName = default(string);
					}
					this.SendPropertyChanged("StageBlockModel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Staging.StageBlockModel")]
	public partial class StageBlockModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlockId;
		
		private string _BlockModelName;
		
		private string _MaterialTypeName;
		
		private string _BlockExternalSystemId;
		
		private double _OpeningVolume;
		
		private double _OpeningTonnes;
		
		private double _OpeningDensity;
		
		private string _LastModifiedUser;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<decimal> _LumpPercent;
		
		private string _ModelFilename;
		
		private EntitySet<StageBlockModelGrade> _StageBlockModelGrades;
		
		private EntityRef<StageBlock> _StageBlock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlockIdChanging(int value);
    partial void OnBlockIdChanged();
    partial void OnBlockModelNameChanging(string value);
    partial void OnBlockModelNameChanged();
    partial void OnMaterialTypeNameChanging(string value);
    partial void OnMaterialTypeNameChanged();
    partial void OnBlockExternalSystemIdChanging(string value);
    partial void OnBlockExternalSystemIdChanged();
    partial void OnOpeningVolumeChanging(double value);
    partial void OnOpeningVolumeChanged();
    partial void OnOpeningTonnesChanging(double value);
    partial void OnOpeningTonnesChanged();
    partial void OnOpeningDensityChanging(double value);
    partial void OnOpeningDensityChanged();
    partial void OnLastModifiedUserChanging(string value);
    partial void OnLastModifiedUserChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnLumpPercentChanging(System.Nullable<decimal> value);
    partial void OnLumpPercentChanged();
    partial void OnModelFilenameChanging(string value);
    partial void OnModelFilenameChanged();
    #endregion
		
		public StageBlockModel()
		{
			this._StageBlockModelGrades = new EntitySet<StageBlockModelGrade>(new Action<StageBlockModelGrade>(this.attach_StageBlockModelGrades), new Action<StageBlockModelGrade>(this.detach_StageBlockModelGrades));
			this._StageBlock = default(EntityRef<StageBlock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BlockId
		{
			get
			{
				return this._BlockId;
			}
			set
			{
				if ((this._BlockId != value))
				{
					if (this._StageBlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockIdChanging(value);
					this.SendPropertyChanging();
					this._BlockId = value;
					this.SendPropertyChanged("BlockId");
					this.OnBlockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockModelName", DbType="VarChar(31) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BlockModelName
		{
			get
			{
				return this._BlockModelName;
			}
			set
			{
				if ((this._BlockModelName != value))
				{
					this.OnBlockModelNameChanging(value);
					this.SendPropertyChanging();
					this._BlockModelName = value;
					this.SendPropertyChanged("BlockModelName");
					this.OnBlockModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialTypeName", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaterialTypeName
		{
			get
			{
				return this._MaterialTypeName;
			}
			set
			{
				if ((this._MaterialTypeName != value))
				{
					this.OnMaterialTypeNameChanging(value);
					this.SendPropertyChanging();
					this._MaterialTypeName = value;
					this.SendPropertyChanged("MaterialTypeName");
					this.OnMaterialTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockExternalSystemId", DbType="VarChar(255)")]
		public string BlockExternalSystemId
		{
			get
			{
				return this._BlockExternalSystemId;
			}
			set
			{
				if ((this._BlockExternalSystemId != value))
				{
					this.OnBlockExternalSystemIdChanging(value);
					this.SendPropertyChanging();
					this._BlockExternalSystemId = value;
					this.SendPropertyChanged("BlockExternalSystemId");
					this.OnBlockExternalSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningVolume", DbType="Float NOT NULL")]
		public double OpeningVolume
		{
			get
			{
				return this._OpeningVolume;
			}
			set
			{
				if ((this._OpeningVolume != value))
				{
					this.OnOpeningVolumeChanging(value);
					this.SendPropertyChanging();
					this._OpeningVolume = value;
					this.SendPropertyChanged("OpeningVolume");
					this.OnOpeningVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningTonnes", DbType="Float NOT NULL")]
		public double OpeningTonnes
		{
			get
			{
				return this._OpeningTonnes;
			}
			set
			{
				if ((this._OpeningTonnes != value))
				{
					this.OnOpeningTonnesChanging(value);
					this.SendPropertyChanging();
					this._OpeningTonnes = value;
					this.SendPropertyChanged("OpeningTonnes");
					this.OnOpeningTonnesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningDensity", DbType="Float NOT NULL")]
		public double OpeningDensity
		{
			get
			{
				return this._OpeningDensity;
			}
			set
			{
				if ((this._OpeningDensity != value))
				{
					this.OnOpeningDensityChanging(value);
					this.SendPropertyChanging();
					this._OpeningDensity = value;
					this.SendPropertyChanged("OpeningDensity");
					this.OnOpeningDensityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUser", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastModifiedUser
		{
			get
			{
				return this._LastModifiedUser;
			}
			set
			{
				if ((this._LastModifiedUser != value))
				{
					this.OnLastModifiedUserChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUser = value;
					this.SendPropertyChanged("LastModifiedUser");
					this.OnLastModifiedUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LumpPercent", DbType="Decimal(7,4)")]
		public System.Nullable<decimal> LumpPercent
		{
			get
			{
				return this._LumpPercent;
			}
			set
			{
				if ((this._LumpPercent != value))
				{
					this.OnLumpPercentChanging(value);
					this.SendPropertyChanging();
					this._LumpPercent = value;
					this.SendPropertyChanged("LumpPercent");
					this.OnLumpPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelFilename", DbType="VarChar(200)")]
		public string ModelFilename
		{
			get
			{
				return this._ModelFilename;
			}
			set
			{
				if ((this._ModelFilename != value))
				{
					this.OnModelFilenameChanging(value);
					this.SendPropertyChanging();
					this._ModelFilename = value;
					this.SendPropertyChanged("ModelFilename");
					this.OnModelFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StageBlockModel_StageBlockModelGrade", Storage="_StageBlockModelGrades", ThisKey="BlockId,BlockModelName,MaterialTypeName", OtherKey="BlockId,BlockModelName,MaterialTypeName")]
		public EntitySet<StageBlockModelGrade> StageBlockModelGrades
		{
			get
			{
				return this._StageBlockModelGrades;
			}
			set
			{
				this._StageBlockModelGrades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StageBlock_StageBlockModel", Storage="_StageBlock", ThisKey="BlockId", OtherKey="BlockId", IsForeignKey=true)]
		public StageBlock StageBlock
		{
			get
			{
				return this._StageBlock.Entity;
			}
			set
			{
				StageBlock previousValue = this._StageBlock.Entity;
				if (((previousValue != value) 
							|| (this._StageBlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StageBlock.Entity = null;
						previousValue.StageBlockModels.Remove(this);
					}
					this._StageBlock.Entity = value;
					if ((value != null))
					{
						value.StageBlockModels.Add(this);
						this._BlockId = value.BlockId;
					}
					else
					{
						this._BlockId = default(int);
					}
					this.SendPropertyChanged("StageBlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StageBlockModelGrades(StageBlockModelGrade entity)
		{
			this.SendPropertyChanging();
			entity.StageBlockModel = this;
		}
		
		private void detach_StageBlockModelGrades(StageBlockModelGrade entity)
		{
			this.SendPropertyChanging();
			entity.StageBlockModel = null;
		}
	}
}
#pragma warning restore 1591
